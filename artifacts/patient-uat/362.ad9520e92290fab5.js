"use strict";(self.webpackChunkpatient=self.webpackChunkpatient||[]).push([[362],{95614:(at,K,u)=>{u.d(K,{L6:()=>a});var L=u(24280),U=u(39646),R=u(60515),P=u(63900),C=u(54004),w=u(18505),O=u(11365),b=u(70262),B=u(84264),j=u(94650),G=u(73602),z=u(30144),M=u(71873),x=u(4523),F=u(56869),N=u(71767);class $ extends N.T_{constructor(e){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=e}Do(e){return this.businessProvider=e,this.serviceContext=e.serviceContext,this.loggingService=e.loggingService,this.execute(),this.response}}var D=u(26177);class H extends ${constructor(e,i,r,t,h,m){super("ValidateAppointmentExcelDataAction"),this.valid=!1,this.excelData=e,this.locations=i,this.patients=r,this.clinicalProviders=t,this.legalCases=h,this.appointmentStatuses=m}preValidateAction(){const e=[];this.excelData.map((i,r)=>{e.push(i.name),this.validationContext.addRule(new D.mi(`locationName_${r}_is_valid}`,"Location Is Not Valid","location.name",i.location,this.locations,!0)),this.validationContext.addRule(new D.mi(`patientName_${r}_is_valid}`,"Patient Is Not Valid","patient.name",i.patient,this.patients,!0)),this.validationContext.addRule(new D.mi(`clinicalProviderName_${r}_is_valid}`,"Clinical Provider Is Not Valid","clinicalProvider.name",i.clinicalProvider,this.clinicalProviders,!0)),this.validationContext.addRule(new D.mi(`legalCaseName_${r}_is_valid}`,"Legal Case Is Not Valid","legalCase.name",i.legalCase,this.legalCases,!0)),this.validationContext.addRule(new D.mi(`appointmentStatusName_${r}_is_valid}`,"Appointment Status Is Not Valid","appointmentStatus.name",i.appointmentStatus,this.appointmentStatuses,!0))}),this.validationContext.addRule(new D.cL("nameIsUnique","Name should be unique",e,!0))}performAction(){}finish(){super.finish();const e={};let i=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(r=>{r instanceof D.mi?r.isValid||(e[r.columnName]?e[r.columnName].newNames.includes(r.newName)||e[r.columnName].newNames.push(r.newName):e[r.columnName]={options:r.possibleValueList.map(t=>t.name),newNames:[r.newName]}):r instanceof D.cL&&(r.isValid||(i=r.conflicts))})):this.valid=!0,this.response=(0,U.of)({valid:this.valid,excelData:this.excelData,conflictNames:i,unknownNames:e})}}var V=u(28234);class Z extends D.wS{constructor(e,i,r,t,h){super(e,i,r,t,h,!0)}}class X extends D.ul{constructor(e,i,r,t=!1){super(e,i,t),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=r,this.configureRules()}configureRules(){this.rules.push(new D.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new Z("name","The appointment name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class k extends ${constructor(e){super("CreateAppointmentAction"),this.input=e}preValidateAction(){this.validationContext.addRule(new X("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages)),this.validationContext.addRule(new D.pt("AppointmentDateTimeIsBeforeCheckInDateTime","CheckIn DateTime should be after Appointment DateTime",this.input.appointmentDateAndTime,this.input.checkedInDateTime))}performAction(){this.response=this.businessProvider.data.userCreateAppointment({input:this.input}).pipe((0,P.w)(e=>(0,V.of)(e.data.created)))}}class Y extends ${constructor(e){super("UpdateAppointmentsAction"),this.appointments=e}preValidateAction(){this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointments,!0))}performAction(){this.response=this.businessProvider.data.userUpdateAppointments({input:{appointments:this.appointments}}).pipe((0,P.w)(e=>(0,U.of)(e.data.updated)))}}class J extends ${constructor(e,i){super("UpdateAppointmentAction"),this.appointment=e,this.appointmentId=i}preValidateAction(){this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointment,!0)).addRule(new D.xF("Id","Id should be a CUID and not null",this.appointmentId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateAppointment({appointmentId:this.appointmentId,input:this.appointment}).pipe((0,P.w)(e=>(0,U.of)(e.data.updated)))}}class q extends ${constructor(e){super("CheckInAppointmentAction"),this.appointment=e}preValidateAction(){var e;this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointment,!0)).addRule(new D.xF("Id","Id should be a CUID and not null",this.appointment.id,!0)).addRule(new D.qJ("currentStatus","You can only check confirmed appointments in",null===(e=this.appointment.appointmentStatus)||void 0===e?void 0:e.name,"Confirmed",!0))}performAction(){this.response=this.businessProvider.data.userCheckInAppointment({appointmentId:this.appointment.id}).pipe((0,P.w)(e=>(0,U.of)(e.data.updated)))}}class I extends ${constructor(e){super("RequestRescheduleAppointmentAction"),this.appointment=e}preValidateAction(){var e;this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointment,!0)).addRule(new D.xF("Id","Id should be a CUID and not null",this.appointment.id,!0)).addRule(new D.qJ("currentStatus","You can only request reschedule for cancelled appointments",null===(e=this.appointment.appointmentStatus)||void 0===e?void 0:e.name,"Cancelled",!0))}performAction(){this.response=this.businessProvider.data.userRequestReschedule({appointmentId:this.appointment.id}).pipe((0,P.w)(e=>(0,U.of)(e.data.updated)))}}class c extends ${constructor(e,i){super("RescheduleAppointmentAction"),this.appointment=e,this.rescheduleDate=i}preValidateAction(){this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointment,!0)).addRule(new D.xF("Id","Id should be a CUID and not null",this.appointment.id,!0))}performAction(){this.response=this.businessProvider.data.userRescheduleAppointment({appointmentId:this.appointment.id,rescheduleDate:this.rescheduleDate}).pipe((0,P.w)(e=>(0,U.of)(e.data.created)))}}class n extends ${constructor(e){super("ConfirmAppointmentAction"),this.appointment=e}preValidateAction(){var e;this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointment,!0)).addRule(new D.xF("Id","Id should be a CUID and not null",this.appointment.id,!0)).addRule(new D.qJ("currentStatus","You can confirm only pending appointments",null===(e=this.appointment.appointmentStatus)||void 0===e?void 0:e.name,"Pending",!0))}performAction(){this.response=this.businessProvider.data.userConfirmAppointment({appointmentId:this.appointment.id}).pipe((0,P.w)(e=>(0,U.of)(e.data.updated)))}}class s extends ${constructor(e){super("CancelAppointmentAction"),this.appointment=e}preValidateAction(){this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointment,!0)).addRule(new D.xF("Id","Id should be a CUID and not null",this.appointment.id,!0))}performAction(){this.response=this.businessProvider.data.userCancelAppointment({appointmentId:this.appointment.id}).pipe((0,P.w)(e=>(0,U.of)(e.data.updated)))}}class o extends ${constructor(e){super("HideAppointmentAction"),this.appointment=e}preValidateAction(){var e;this.validationContext.addRule(new D.DJ("Input","Input should have values",this.appointment,!0)).addRule(new D.xF("Id","Id should be a CUID and not null",this.appointment.id,!0)).addRule(new D.HN("currentStatus","You can only hide non-pending appointments",null===(e=this.appointment.appointmentStatus)||void 0===e?void 0:e.name,"Pending",!0))}performAction(){this.response=this.businessProvider.data.userHideAppointment({appointmentId:this.appointment.id}).pipe((0,P.w)(e=>(0,U.of)(e.data.updated)))}}let v=(()=>{class l extends N.nH{constructor(i,r,t){super("NotificationService.AppointmentBusinessProviderService",i,t),this.data=r}createAppointment(i){const r=new k(i);return r.Do(this),r.response}updateAppointment(i,r){const t=new J(i,r);return t.Do(this),t.response}checkInAppointment(i){const r=new q(i);return r.Do(this),r.response}requestRescheduleAppointment(i){const r=new I(i);return r.Do(this),r.response}rescheduleAppointment(i,r){const t=new c(i,r);return t.Do(this),t.response}confirmAppointment(i){const r=new n(i);return r.Do(this),r.response}cancelAppointment(i){const r=new s(i);return r.Do(this),r.response}hideAppointment(i){const r=new o(i);return r.Do(this),r.response}importAppointments(i){const r=new Y(i);return r.Do(this),r.response}validateAppointmentExcelData(i,r,t,h,m,g){const d=new H(i,r,t,h,m,g);return d.Do(this),d.response}}return l.\u0275fac=function(i){return new(i||l)(j.LFG(F.ed),j.LFG(G.q),j.LFG(N.oI))},l.\u0275prov=j.Yz7({token:l,factory:l.\u0275fac,providedIn:"root"}),l})(),E=(()=>{class l extends N.nH{constructor(i,r,t){super("AppointmentService",t,i),this.businessProvider=r}createAppointment(i){const r=Object.fromEntries(Object.entries(i).filter(([t,h])=>null!==h));return this.businessProvider.createAppointment(r)}updateAppointment(i,r){return this.businessProvider.updateAppointment(i,r)}checkInAppointment(i){return this.businessProvider.checkInAppointment(i)}requestRescheduleAppointment(i){return this.businessProvider.requestRescheduleAppointment(i)}rescheduleAppointment(i,r){return this.businessProvider.rescheduleAppointment(i,r)}confirmAppointment(i){return this.businessProvider.confirmAppointment(i)}cancelAppointment(i){return this.businessProvider.cancelAppointment(i)}hideAppointment(i){return this.businessProvider.hideAppointment(i)}importAppointments(i){return this.businessProvider.importAppointments(i)}validateAppointmentExcelData(i,r,t,h,m,g){return this.businessProvider.validateAppointmentExcelData(i,r,t,h,m,g)}}return l.\u0275fac=function(i){return new(i||l)(j.LFG(v,8),j.LFG(v),j.LFG(F.ed))},l.\u0275prov=j.Yz7({token:l,factory:l.\u0275fac,providedIn:"root"}),l})();const A={Pending:"#ffbc03","Checked In":"#49c204","Claim Submitted":"#50fe93",Approved:"green",Rejected:"red",Rescheduled:"#ffbc03",Personal:"orange","Provider Paid":"blue","No Showed":"#ff1d1a",Confirmed:"#49c204",Processing:"#50fe93",Cancelled:"red"},y={Pending:"assets/icons/pending.png","Checked In":"assets/icons/checkedin.png",Rescheduled:"assets/icons/rescheduled.png","No Showed":"assets/icons/noshow.png",Confirmed:"assets/icons/confirmed.png",Cancelled:"assets/icons/cancel.png",Approved:"assets/icons/pending.png",Rejected:"assets/icons/pending.png",Personal:"assets/icons/pending.png",Processing:"assets/icons/pending.png","Provider Paid":"assets/icons/pending.png","Claim Submitted":"assets/icons/pending.png"};let a=(()=>{class l extends L.m1{constructor(i,r,t,h,m,g){if(super({loading:!1,appointments:[],done:!1,searchQuery:"",id:void 0,formName:void 0,locationId:void 0,patientId:void 0,clinicalProviderId:void 0,attorneyId:void 0,firmId:void 0,legalCaseId:void 0,appointmentStatusId:void 0,visitKindId:void 0,medicalRecordStatusId:void 0,medicalRecordStatusOptions:void 0,paging:{limit:1e4,skip:0}}),this.data=i,this.router=r,this.route=t,this.toast=h,this.formService=m,this.appointmentService=g,this.medicalRecordStatuses$=this.data.userMedicalRecordStatuses({input:{}}).pipe((0,P.w)(d=>{var p;return(0,U.of)(null===(p=d.data.items)||void 0===p?void 0:p.map(f=>({id:f?.id,title:f?.name})).filter(f=>"Test Status"!=f.title&&"Medical Records Complete"!=f.title))})),this.dateFilter$=this.select(d=>d.dateFilter),this.errors$=this.select(d=>d.errors),this.loading$=this.select(d=>d.loading),this.done$=this.select(d=>d.done),this.item$=this.select(d=>{var p,f,S,Q;return Object.assign(Object.assign({},d.item),{firstSpecialty:null===(S=null===(f=null===(p=d.item)||void 0===p?void 0:p.clinicalProvider)||void 0===f?void 0:f.clinicalProviderSpecialties)||void 0===S?void 0:S.at(0),color:null!==(Q=d.item)&&void 0!==Q&&Q.appointmentStatus?A[d.item.appointmentStatus.name]:"red"})}),this.appointments$=this.select(d=>d.appointments),this.locations$=this.select(d=>d.locations||[]),this.patients$=this.select(d=>d.patients||[]),this.clinicalProviders$=this.select(d=>d.clinicalProviders||[]),this.legalCases$=this.select(d=>d.legalCases||[]),this.appointmentStatuses$=this.select(d=>d.appointmentStatuses||[]),this.visitKinds$=this.select(d=>d.visitKinds||[]),this.locationId$=this.select(d=>d.locationId),this.patientId$=this.select(d=>d.patientId),this.attorneyId$=this.select(d=>d.attorneyId),this.firmId$=this.select(d=>d.firmId),this.clinicalProviderId$=this.select(d=>d.clinicalProviderId),this.legalCaseId$=this.select(d=>d.legalCaseId),this.appointmentCount$=this.select(d=>d.appointmentCount),this.appointmentStatusId$=this.select(d=>d.appointmentStatusId),this.medicalRecordStatusId$=this.select(d=>d.medicalRecordStatusId),this.medicalRecordStatusOptions$=this.select(d=>d.medicalRecordStatusOptions),this.visitKindId$=this.select(d=>d.visitKindId),this.paging$=this.select(d=>d.paging),this.searchQuery$=this.select(d=>d.searchQuery),this.formName$=this.select(d=>d.formName),this.actionResult$=this.select(this.item$,this.done$,(d,p)=>({item:d,done:p}),{debounce:!0}),this.formattedAppointments$=this.select(this.appointments$,d=>d.map(p=>{var f,S,Q,W,tt,et,nt,ot,ct,rt,lt,ht,ut;let pt="- -(-min)";if(p.start){let st=p.duration||"0 min";p.duration&&(p.duration<60?st=`${p.duration}min`:(p.duration>60&&(st=Math.floor(p.duration/60)+"h "+p.duration%60+"min"),p.duration%60==0&&(st=Math.floor(p.duration/60)+"h"))),pt=`${(0,B.YZ)(p.start)} (${st})`}const T=[{title:"View"},{title:"Edit"}];"No Showed"!==(null===(f=p.appointmentStatus)||void 0===f?void 0:f.name)&&T.unshift({title:"No Show"});let it=!1;return(null===(S=p.clinicalProvider)||void 0===S?void 0:S.clinicalProviderSpecialties)?.forEach(st=>{var dt;("Chiropractor"===(null===(dt=st.specialty)||void 0===dt?void 0:dt.name)||"Home Health"===st?.name)&&(it=!0)}),it&&T.push({title:"Request More Visits"}),Object.assign(Object.assign({},p),{timeAndDuration:pt,canRequestVisits:it,otherActions:T,providerImage:null===(W=null===(Q=p.clinicalProvider)||void 0===Q?void 0:Q.profileImage)||void 0===W?void 0:W.id,firstSpecialty:null===(et=null===(tt=p.clinicalProvider)||void 0===tt?void 0:tt.clinicalProviderSpecialties)||void 0===et?void 0:et.at(0),patientImage:null!=(null===(nt=p.patient)||void 0===nt?void 0:nt.users)&&null!=(null===(ot=p.patient)||void 0===ot?void 0:ot.users)?null===(rt=null===(ct=p.patient)||void 0===ct?void 0:ct.users[0])||void 0===rt?void 0:rt.avatarUrl:"",providerSpecialties:null===(lt=p.clinicalProvider)||void 0===lt?void 0:lt.clinicalProviderSpecialties,color:p.appointmentStatus&&null!==(ht=A[p.appointmentStatus.name])&&void 0!==ht?ht:"red",icon:p.appointmentStatus&&null!==(ut=y[p.appointmentStatus.name])&&void 0!==ut?ut:"assets/icons/rescheduled.png"})})),this.formattedAppointmentsForProvider$=this.select(this.formattedAppointments$,d=>d.map(p=>{var f,S,Q;const W=[{title:"Check In",color:null!==(f=A["Checked In"])&&void 0!==f?f:"red",icon:y["Checked In"]},{title:"Cancel",color:null!==(S=A.Cancelled)&&void 0!==S?S:"red",icon:y.Cancelled},{title:"No Show",color:null!==(Q=A["No Showed"])&&void 0!==Q?Q:"red",icon:y["No Showed"]}];return Object.assign(Object.assign({},p),{actions:W,canChangeStatus:!0})})),this.formattedAppointmentsForPatient$=this.select(this.formattedAppointments$,d=>d.map(p=>{var f,S,Q,W;const tt={Pending:[{title:"Confirm",color:null!==(f=A.Confirmed)&&void 0!==f?f:"red",icon:y.Confirmed},{title:"Cancel",color:null!==(S=A.Cancelled)&&void 0!==S?S:"red",icon:y.Cancelled}],"Checked In":[],Rescheduled:[{title:"Confirm",color:null!==(Q=A.Confirmed)&&void 0!==Q?Q:"red",icon:y.Confirmed},{title:"Cancel",color:null!==(W=A.Cancelled)&&void 0!==W?W:"red",icon:y.Cancelled}],"No Showed":[],Confirmed:[],Cancelled:[]},et=p.appointmentStatus?tt[p.appointmentStatus.name]:[];return Object.assign(Object.assign({},p),{actions:et,canChangeStatus:et.length>0})})),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.formattedAppointments$,this.locations$,this.patients$,this.clinicalProviders$,this.legalCases$,this.appointmentStatuses$,this.visitKinds$,this.medicalRecordStatuses$,(d,p,f,S,Q,W,tt,et,nt,ot,ct,rt)=>({errors:d,loading:p,item:f,formName:S,appointments:Q,locations:W,patients:tt,clinicalProviders:et,legalCases:nt,appointmentStatuses:ot,visitKinds:ct,medicalRecordStatuses:rt}),{debounce:!0}),this.input$=this.select(this.paging$,this.locationId$,this.dateFilter$,this.patientId$,this.clinicalProviderId$,this.legalCaseId$,this.appointmentStatusId$,this.visitKindId$,this.searchQuery$,this.attorneyId$,this.firmId$,this.medicalRecordStatusId$,this.medicalRecordStatusOptions$,(d,p,f,S,Q,W,tt,et,nt,ot,ct,rt,lt)=>({limit:d.limit,skip:d.skip,name:nt,locationId:p,patientId:S,clinicalProviderId:Q,legalCaseId:W,appointmentStatusId:tt,visitKindId:et,total:d.total,attorneyId:ot,firmId:ct,dateFilter:f,medicalRecordStatusId:rt,medicalRecordStatusOptions:lt})),this.setFormName=this.updater((d,p)=>Object.assign(Object.assign({},d),{formName:p})),this.setAttorneyId=this.updater((d,p)=>Object.assign(Object.assign({},d),{attorneyId:p})),this.setProviderId=this.updater((d,p)=>Object.assign(Object.assign({},d),{providerId:p})),this.setFirmId=this.updater((d,p)=>Object.assign(Object.assign({},d),{firmId:p})),this.setLocationId=this.updater((d,p)=>Object.assign(Object.assign({},d),{locationId:p})),this.setId=this.updater((d,p)=>Object.assign(Object.assign({},d),{id:p})),this.setPatientId=this.updater((d,p)=>Object.assign(Object.assign({},d),{patientId:p})),this.setClinicalProviderId=this.updater((d,p)=>Object.assign(Object.assign({},d),{clinicalProviderId:p})),this.setLegalCaseId=this.updater((d,p)=>Object.assign(Object.assign({},d),{legalCaseId:p})),this.setAppointmentStatusId=this.updater((d,p)=>Object.assign(Object.assign({},d),{appointmentStatusId:p})),this.setMedicalRecordStatusId=this.updater((d,p)=>Object.assign(Object.assign({},d),{medicalRecordStatusId:p})),this.setMedicalRecordStatusOptions=this.updater((d,p)=>Object.assign(Object.assign({},d),{medicalRecordStatusOptions:p})),this.setVisitKindId=this.updater((d,p)=>Object.assign(Object.assign({},d),{visitKindId:p})),this.setDateFilter=this.updater((d,p)=>Object.assign(Object.assign({},d),{dateFilter:p})),this.setSkip=this.updater((d,p)=>Object.assign(Object.assign({},d),{paging:Object.assign(Object.assign({},d.paging),{skip:p})})),this.setLimit=this.updater((d,p)=>Object.assign(Object.assign({},d),{paging:Object.assign(Object.assign({},d.paging),{limit:p})})),this.filterLocations=d=>this.data.userSelectLocations({input:{name:d}}).pipe((0,L._b)(p=>{const f=p.data.items;return this.patchState({locations:f}),f},p=>this.patchState({errors:p.graphQLErrors?p.graphQLErrors:p})),(0,C.U)(p=>p.data.items)),this.filterPatients=d=>this.data.userSelectPatients({input:{name:d}}).pipe((0,L._b)(p=>{const f=p.data.items;return this.patchState({patients:f}),f},p=>this.patchState({errors:p.graphQLErrors?p.graphQLErrors:p})),(0,C.U)(p=>p.data.items)),this.filterClinicalProviders=d=>this.data.userSelectClinicalProviders({input:{name:d}}).pipe((0,L._b)(p=>{const f=p.data.items;return this.patchState({clinicalProviders:f}),f},p=>this.patchState({errors:p.graphQLErrors?p.graphQLErrors:p})),(0,C.U)(p=>p.data.items)),this.filterLegalCases=d=>this.data.userSelectLegalCases({input:{name:d}}).pipe((0,L._b)(p=>{const f=p.data.items;return this.patchState({legalCases:f}),f},p=>this.patchState({errors:p.graphQLErrors?p.graphQLErrors:p})),(0,C.U)(p=>p.data.items)),this.filterAppointmentStatuses=d=>this.data.userSelectAppointmentStatuses({input:{name:d}}).pipe((0,L._b)(p=>{const f=p.data.items;return this.patchState({appointmentStatuses:f}),f},p=>this.patchState({errors:p.graphQLErrors?p.graphQLErrors:p})),(0,C.U)(p=>p.data.items)),this.filterVisitKinds=d=>this.data.userSelectVisitKinds({input:{name:d}}).pipe((0,L._b)(p=>{const f=p.data.items;return this.patchState({visitKinds:f}),f},p=>this.patchState({errors:p.graphQLErrors?p.graphQLErrors:p})),(0,C.U)(p=>p.data.items)),this.addLocation=this.updater((d,p)=>Object.assign(Object.assign({},d),{locations:d.locations.concat(p)})),this.addPatient=this.updater((d,p)=>Object.assign(Object.assign({},d),{patients:d.patients.concat(p)})),this.addClinicalProvider=this.updater((d,p)=>Object.assign(Object.assign({},d),{clinicalProviders:d.clinicalProviders.concat(p)})),this.addLegalCase=this.updater((d,p)=>Object.assign(Object.assign({},d),{legalCases:d.legalCases.concat(p)})),this.addAppointmentStatus=this.updater((d,p)=>Object.assign(Object.assign({},d),{appointmentStatuses:d.appointmentStatuses.concat(p)})),this.addVisitKind=this.updater((d,p)=>Object.assign(Object.assign({},d),{visitKinds:d.visitKinds.concat(p)})),this.deleteAppointment=this.updater((d,p)=>Object.assign(Object.assign({},d),{appointments:d.appointments.filter(f=>f.id!==p.id)})),this.setItem=this.updater((d,p)=>Object.assign(Object.assign({},d),{item:p})),this.addNewAppointment=this.updater((d,p)=>Object.assign(Object.assign({},d),{appointments:[...d.appointments,p]})),this.updateAppointment=this.updater((d,p)=>Object.assign(Object.assign({},d),{appointments:d.appointments.map(f=>f.id===p.id?p:f)})),this.addAppointments=this.updater((d,p)=>Object.assign(Object.assign({},d),{appointments:d.appointments.concat(p)})),this.updateAppointments=this.updater((d,p)=>Object.assign(Object.assign({},d),{appointments:d.appointments.map(f=>p.find(Q=>Q.id===f.id)||f)})),this.setSearchQuery=this.updater((d,p)=>Object.assign(Object.assign({},d),{searchQuery:p})),this.loadAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,P.w)(p=>this.data.userAppointment({appointmentId:p}).pipe((0,L._b)(f=>this.patchState({item:f.data.item,errors:f.errors,loading:!1}),f=>this.patchState({loading:!1,errors:f.graphQLErrors?f.graphQLErrors:f})))))),this.loadAppointmentsEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.input$),(0,P.w)(([p,f])=>(console.log("appointment input",f),this.data.userAppointments({input:f}).pipe((0,L._b)(S=>this.patchState({paging:{limit:f.limit,skip:f.skip,total:S.data.count.total},appointments:S.data.items,errors:S.errors,loading:!1}),S=>this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S}))))))),this.uploadBillEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,P.w)(p=>(console.log("appointment input",p),this.data.userUploadBill({input:p}).pipe((0,L._b)(f=>this.patchState({item:Object.assign(Object.assign({},p),{bill:f.data.updated.bill}),errors:f.errors,loading:!1}),f=>this.patchState({loading:!1,errors:f.graphQLErrors?f.graphQLErrors:f}))))))),this.createAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,P.w)(p=>this.appointmentService.createAppointment(Object.assign({},p)).pipe((0,L._b)(f=>{this.addNewAppointment(f),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:f,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},f=>{f.graphQLErrors?(this.toast.error(f.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:f.graphQLErrors?f.graphQLErrors:f})):(this.toast.error(f.Message),this.formService.setErrors(f.Data))}))))),this.updateAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([p,f])=>this.appointmentService.updateAppointment(p,p.id).pipe((0,L._b)(S=>{this.updateAppointment(S),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:S,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},S=>{S.graphQLErrors?(this.toast.error(S.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S})):(this.toast.error(S.Message),this.formService.setErrors(S.Data))}))))),this.deleteAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([p,f])=>this.data.userDeleteAppointment({appointmentId:f.id}).pipe((0,L._b)(S=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:S.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},S=>{S.graphQLErrors?(this.toast.error(S.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S})):(this.toast.error(S.Message),this.formService.setErrors(S.Data))}))))),this.importExcelEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,P.w)(p=>this.appointmentService.importAppointments(p).pipe((0,b.K)(f=>{var S;return this.toast.error(null!==(S=f.Message)&&void 0!==S?S:"Failed to save",{duration:3e3}),R.E}),(0,w.b)(f=>{const S=JSON.parse(f.created),Q=JSON.parse(f.updated),W=JSON.parse(f.failed),tt=S.length+Q.length+W.length;this.addAppointments(S),this.updateAppointments(Q),this.toast.success(`${S.length} created, ${Q.length} updated, ${W.length} failed of total ${tt}`,{duration:3e3})}))))),this.deleteSpecificAppointmentEffect=this.effect(d=>d.pipe((0,P.w)(p=>this.data.userDeleteAppointment({appointmentId:p.id}).pipe((0,L._b)(f=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:f.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},f=>{f.graphQLErrors?(this.toast.error(f.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:f.graphQLErrors?f.graphQLErrors:f})):(this.toast.error(f.Message),this.formService.setErrors(f.Data))}))))),this.checkInAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([p,f])=>(console.log("checkIn store appointment",p),this.appointmentService.checkInAppointment(p).pipe((0,L._b)(S=>{this.updateAppointment(S),this.toast.success("Checked In Successfully!"),setTimeout(()=>this.patchState({item:S,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},S=>{S.graphQLErrors?(this.toast.error(S.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S})):(this.toast.error(S.Message),this.formService.setErrors(S.Data))})))))),this.confirmAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([p,f])=>this.appointmentService.confirmAppointment(p).pipe((0,L._b)(S=>{this.updateAppointment(S),this.toast.success("Confirmed Successfully!"),setTimeout(()=>this.patchState({item:S,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},S=>{S.graphQLErrors?(this.toast.error(S.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S})):(this.toast.error(S.Message),this.formService.setErrors(S.Data))}))))),this.requestRescehduleAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([p,f])=>this.appointmentService.requestRescheduleAppointment(p).pipe((0,L._b)(S=>{this.updateAppointment(S),this.toast.success("Requested Reschedule Successfully!"),setTimeout(()=>this.patchState({item:S,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},S=>{S.graphQLErrors?(this.toast.error(S.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S})):(this.toast.error(S.Message),this.formService.setErrors(S.Data))}))))),this.rescehduleAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([{appointment:p,rescheduleDate:f},S])=>this.appointmentService.rescheduleAppointment(p,f).pipe((0,L._b)(Q=>{this.updateAppointment(Q),this.toast.success("Rescheduled Successfully!"),setTimeout(()=>this.patchState({item:Q,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},Q=>{Q.graphQLErrors?(this.toast.error(Q.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:Q.graphQLErrors?Q.graphQLErrors:Q})):(this.toast.error(Q.Message),this.formService.setErrors(Q.Data))}))))),this.cancelAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([p,f])=>this.appointmentService.cancelAppointment(p).pipe((0,L._b)(S=>{this.updateAppointment(S),this.toast.success("Cancelled Successfully!"),setTimeout(()=>this.patchState({item:S,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},S=>{S.graphQLErrors?(this.toast.error(S.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S})):(this.toast.error(S.Message),this.formService.setErrors(S.Data))}))))),this.hideAppointmentEffect=this.effect(d=>d.pipe((0,w.b)(()=>this.patchState({loading:!0})),(0,O.M)(this.item$),(0,P.w)(([p,f])=>this.appointmentService.hideAppointment(p).pipe((0,L._b)(S=>{this.updateAppointment(S),this.toast.success("Hided Successfully!"),setTimeout(()=>this.patchState({item:S,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},S=>{S.graphQLErrors?(this.toast.error(S.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:S.graphQLErrors?S.graphQLErrors:S})):(this.toast.error(S.Message),this.formService.setErrors(S.Data))}))))),this.route.snapshot.paramMap.has("appointmentId")){const d=this.route.snapshot.paramMap.get("appointmentId");this.setId(d),this.setFormName("appointment_edit")}else this.setFormName("appointment_create");if(this.route.snapshot.paramMap.has("locationId")){const d=this.route.snapshot.paramMap.get("locationId");this.setLocationId(d)}if(this.route.snapshot.paramMap.has("patientId")){const d=this.route.snapshot.paramMap.get("patientId");this.setPatientId(d)}if(this.route.snapshot.paramMap.has("clinicalProviderId")){const d=this.route.snapshot.paramMap.get("clinicalProviderId");this.setClinicalProviderId(d)}if(this.route.snapshot.paramMap.has("legalCaseId")){const d=this.route.snapshot.paramMap.get("legalCaseId");this.setLegalCaseId(d)}if(this.route.snapshot.paramMap.has("appointmentStatusId")){const d=this.route.snapshot.paramMap.get("appointmentStatusId");this.setAppointmentStatusId(d)}if(this.route.snapshot.paramMap.has("visitKindId")){const d=this.route.snapshot.paramMap.get("visitKindId");this.setVisitKindId(d)}if(this.route.snapshot.paramMap.has("attorneyId")){const d=this.route.snapshot.paramMap.get("attorneyId");this.setAttorneyId(d)}if(this.route.snapshot.paramMap.has("firmId")){const d=this.route.snapshot.paramMap.get("firmId");this.setFirmId(d)}}validateImportData(i){return this.vm$.pipe((0,P.w)(r=>this.appointmentService.validateAppointmentExcelData(i,r.locations,r.patients,r.clinicalProviders,r.legalCases,r.appointmentStatuses)))}setAssignUserModalCtrl(i){this.assignUserModalCtrl=i}openAssignUserModal(i){var r;null===(r=this.assignUserModalCtrl)||void 0===r||r.open(i,{},this)}filterByMedicalRecordStatus(i){i&&(this.setMedicalRecordStatusOptions(i),this.loadAppointmentsEffect())}assignAppointmentToUser(i){const{id:r,name:t,assignedToId:h}=i,m=this.actionResult$.subscribe(g=>{var d;const{done:p}=g;p&&(m.unsubscribe(),null===(d=this.assignUserModalCtrl)||void 0===d||d.close())});this.updateAppointmentEffect({id:r,name:t,assignedToId:h})}}return l.\u0275fac=function(i){return new(i||l)(j.LFG(G.q),j.LFG(z.F0),j.LFG(z.gz),j.LFG(M.F),j.LFG(x.o),j.LFG(E))},l.\u0275prov=j.Yz7({token:l,factory:l.\u0275fac}),l})()},60908:(at,K,u)=>{u.d(K,{R:()=>I});var L=u(24280),U=u(60515),R=u(54004),P=u(18505),C=u(63900),w=u(11365),O=u(70262),b=u(94650),B=u(73602),j=u(30144),G=u(71873),z=u(4523),M=u(56869),x=u(71767),F=u(39646);class N extends x.T_{constructor(n){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=n}Do(n){return this.businessProvider=n,this.serviceContext=n.serviceContext,this.loggingService=n.loggingService,this.execute(),this.response}}var $=u(26177);class D extends N{constructor(n,s){super("ValidateClinicalProviderLocationAvailabilityExcelDataAction"),this.valid=!1,this.excelData=n,this.clinicalProviderLocations=s}preValidateAction(){const n=[];this.excelData.map((s,o)=>{n.push(s.name),this.validationContext.addRule(new $.mi(`clinicalProviderLocationName_${o}_is_valid}`,"Clinical Provider Location Is Not Valid","clinicalProviderLocation.name",s.clinicalProviderLocation,this.clinicalProviderLocations,!0))}),this.validationContext.addRule(new $.cL("nameIsUnique","Name should be unique",n,!0))}performAction(){}finish(){super.finish();const n={};let s=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(o=>{o instanceof $.mi?o.isValid||(n[o.columnName]?n[o.columnName].newNames.includes(o.newName)||n[o.columnName].newNames.push(o.newName):n[o.columnName]={options:o.possibleValueList.map(v=>v.name),newNames:[o.newName]}):o instanceof $.cL&&(o.isValid||(s=o.conflicts))})):this.valid=!0,this.response=(0,F.of)({valid:this.valid,excelData:this.excelData,conflictNames:s,unknownNames:n})}}var H=u(28234);class V extends $.wS{constructor(n,s,o,v,E){super(n,s,o,v,E,!0)}}class Z extends $.ul{constructor(n,s,o,v=!1){super(n,s,v),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=o,this.configureRules()}configureRules(){this.rules.push(new $.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new V("name","The clinicalproviderlocationavailability name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class X extends N{constructor(n){super("CreateClinicalProviderLocationAvailabilityAction"),this.input=n}preValidateAction(){this.validationContext.addRule(new Z("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateClinicalProviderLocationAvailability({input:this.input}).pipe((0,C.w)(n=>(0,H.of)(n.data.created)))}}class k extends N{constructor(n){super("UpdateClinicalProviderLocationAvailabilitiesAction"),this.clinicalProviderLocationAvailabilities=n}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.clinicalProviderLocationAvailabilities,!0))}performAction(){this.response=this.businessProvider.data.userUpdateClinicalProviderLocationAvailabilities({input:{clinicalProviderLocationAvailabilities:this.clinicalProviderLocationAvailabilities}}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}class Y extends N{constructor(n,s){super("UpdateClinicalProviderLocationAvailabilityAction"),this.clinicalProviderLocationAvailability=n,this.clinicalProviderLocationAvailabilityId=s}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.clinicalProviderLocationAvailability,!0)).addRule(new $.xF("Id","Id should be a CUID and not null",this.clinicalProviderLocationAvailabilityId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateClinicalProviderLocationAvailability({clinicalProviderLocationAvailabilityId:this.clinicalProviderLocationAvailabilityId,input:this.clinicalProviderLocationAvailability}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}let J=(()=>{class c extends x.nH{constructor(s,o,v){super("NotificationService.ClinicalProviderLocationAvailabilityBusinessProviderService",s,v),this.data=o}createClinicalProviderLocationAvailability(s){const o=new X(s);return o.Do(this),o.response}updateClinicalProviderLocationAvailability(s,o){const v=new Y(s,o);return v.Do(this),v.response}importClinicalProviderLocationAvailabilities(s){const o=new k(s);return o.Do(this),o.response}validateClinicalProviderLocationAvailabilityExcelData(s,o){const v=new D(s,o);return v.Do(this),v.response}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(M.ed),b.LFG(B.q),b.LFG(x.oI))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),q=(()=>{class c extends x.nH{constructor(s,o,v){super("ClinicalProviderLocationAvailabilityService",v,s),this.businessProvider=o}createClinicalProviderLocationAvailability(s){const o=Object.fromEntries(Object.entries(s).filter(([v,E])=>null!==E));return this.businessProvider.createClinicalProviderLocationAvailability(o)}updateClinicalProviderLocationAvailability(s,o){return this.businessProvider.updateClinicalProviderLocationAvailability(s,o)}importClinicalProviderLocationAvailabilities(s){return this.businessProvider.importClinicalProviderLocationAvailabilities(s)}validateClinicalProviderLocationAvailabilityExcelData(s,o){return this.businessProvider.validateClinicalProviderLocationAvailabilityExcelData(s,o)}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(J,8),b.LFG(J),b.LFG(M.ed))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),I=(()=>{class c extends L.m1{constructor(s,o,v,E,A,y){if(super({loading:!1,clinicalProviderLocationAvailabilities:[],done:!1,searchQuery:"",formName:void 0,clinicalProviderLocationId:"-----",paging:{limit:1e4,skip:0}}),this.data=s,this.router=o,this.route=v,this.toast=E,this.formService=A,this.clinicalProviderLocationAvailabilityService=y,this.errors$=this.select(a=>a.errors),this.loading$=this.select(a=>a.loading),this.done$=this.select(a=>a.done),this.item$=this.select(a=>a.item),this.clinicalProviderLocationAvailabilities$=this.select(a=>a.clinicalProviderLocationAvailabilities),this.clinicalProviderLocations$=this.select(a=>a.clinicalProviderLocations||[]),this.paging$=this.select(a=>a.paging),this.searchQuery$=this.select(a=>a.searchQuery),this.formName$=this.select(a=>a.formName),this.startTime$=this.select(a=>a.startTime),this.endTime$=this.select(a=>a.endTime),this.day$=this.select(a=>a.day),this.clinicalProviderLocationId$=this.select(a=>a.clinicalProviderLocationId),this.actionResult$=this.select(this.item$,this.done$,(a,l)=>({item:a,done:l}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.clinicalProviderLocationAvailabilities$,this.clinicalProviderLocations$,(a,l,e,i,r,t)=>({errors:a,loading:l,item:e,formName:i,clinicalProviderLocationAvailabilities:r,clinicalProviderLocations:t}),{debounce:!0}),this.input$=this.select(this.paging$,this.searchQuery$,this.clinicalProviderLocationId$,this.startTime$,this.endTime$,this.day$,(a,l,e,i,r,t)=>({limit:a.limit,skip:a.skip,name:l,total:a.total,clinicalProviderLocationId:e,startTime:i,endTime:r,day:t})),this.setFormName=this.updater((a,l)=>Object.assign(Object.assign({},a),{formName:l})),this.setStartTime=this.updater((a,l)=>Object.assign(Object.assign({},a),{startTime:l})),this.setDay=this.updater((a,l)=>(console.log("day",l),Object.assign(Object.assign({},a),{day:l}))),this.setEndTime=this.updater((a,l)=>Object.assign(Object.assign({},a),{endTime:l})),this.setClinicalProviderLocationId=this.updater((a,l)=>(console.log("clinicalProviderLocationId",l),Object.assign(Object.assign({},a),{clinicalProviderLocationId:l}))),this.filterClinicalProviderLocations=a=>this.data.userSelectClinicalProviderLocations({input:{name:a}}).pipe((0,L._b)(l=>{const e=l.data.items;return this.patchState({clinicalProviderLocations:e}),e},l=>this.patchState({errors:l.graphQLErrors?l.graphQLErrors:l})),(0,R.U)(l=>l.data.items)),this.addClinicalProviderLocation=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderLocations:a.clinicalProviderLocations.concat(l)})),this.setItem=this.updater((a,l)=>Object.assign(Object.assign({},a),{item:l})),this.addNewClinicalProviderLocationAvailability=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderLocationAvailabilities:[...a.clinicalProviderLocationAvailabilities,l]})),this.updateClinicalProviderLocationAvailability=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderLocationAvailabilities:a.clinicalProviderLocationAvailabilities.map(e=>e.id===l.id?l:e)})),this.deleteClinicalProviderLocationAvailability=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderLocationAvailabilities:a.clinicalProviderLocationAvailabilities.filter(e=>e.id!==l.id)})),this.addClinicalProviderLocationAvailabilities=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderLocationAvailabilities:a.clinicalProviderLocationAvailabilities.concat(l)})),this.updateClinicalProviderLocationAvailabilities=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderLocationAvailabilities:a.clinicalProviderLocationAvailabilities.map(e=>l.find(r=>r.id===e.id)||e)})),this.setSearchQuery=this.updater((a,l)=>Object.assign(Object.assign({},a),{searchQuery:l})),this.loadClinicalProviderLocationAvailabilityEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(l=>this.data.userClinicalProviderLocationAvailability({clinicalProviderLocationAvailabilityId:l}).pipe((0,L._b)(e=>{this.patchState({item:e.data.item,errors:e.errors,loading:!1})},e=>this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})))))),this.loadClinicalProviderLocationAvailabilitiesEffect=this.effect(a=>a.pipe((0,P.b)(()=>{this.patchState({loading:!0})}),(0,w.M)(this.input$),(0,C.w)(([l,e])=>(console.log("input",e),this.data.userClinicalProviderLocationAvailabilities({input:e}).pipe((0,L._b)(i=>{console.log("res",i.data.items),this.patchState({paging:{limit:e.limit,skip:e.skip,total:i.data.count.total},clinicalProviderLocationAvailabilities:i.data.items,errors:i.errors,loading:!1})},i=>this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i}))))))),this.createClinicalProviderLocationAvailabilityEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(l=>this.clinicalProviderLocationAvailabilityService.createClinicalProviderLocationAvailability(Object.assign({},l)).pipe((0,L._b)(e=>{this.addNewClinicalProviderLocationAvailability(e),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:e,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},e=>{e.graphQLErrors?(this.toast.error(e.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})):(this.toast.error(e.Message),this.formService.setErrors(e.Data))}))))),this.updateClinicalProviderLocationAvailabilityEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([l,e])=>this.clinicalProviderLocationAvailabilityService.updateClinicalProviderLocationAvailability(l,l.id).pipe((0,L._b)(i=>{this.updateClinicalProviderLocationAvailability(i),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:i,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.deleteClinicalProviderLocationAvailabilityEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([l,e])=>(console.log(e),this.data.userDeleteClinicalProviderLocationAvailability({clinicalProviderLocationAvailabilityId:e.id}).pipe((0,L._b)(i=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:i.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))})))))),this.deleteClinicalProviderLocationAvailabilityInScheduleTimeEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([l,e])=>(console.log(e),this.data.userDeleteClinicalProviderLocationAvailability({clinicalProviderLocationAvailabilityId:e.id}).pipe((0,L._b)(i=>{this.deleteClinicalProviderLocationAvailability(i.data.deleted),this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:i.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))})))))),this.importExcelEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(l=>this.clinicalProviderLocationAvailabilityService.importClinicalProviderLocationAvailabilities(l).pipe((0,O.K)(e=>{var i;return this.toast.error(null!==(i=e.Message)&&void 0!==i?i:"Failed to save",{duration:3e3}),U.E}),(0,P.b)(e=>{const i=JSON.parse(e.created),r=JSON.parse(e.updated),t=JSON.parse(e.failed),h=i.length+r.length+t.length;this.addClinicalProviderLocationAvailabilities(i),this.updateClinicalProviderLocationAvailabilities(r),this.toast.success(`${i.length} created, ${r.length} updated, ${t.length} failed of total ${h}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("clinicalProviderLocationAvailabilityId")?this.setFormName("clinicalProviderLocationAvailability_edit"):this.setFormName("clinicalProviderLocationAvailability_create"),this.route.snapshot.paramMap.has("clinicalProviderLocationId")){const a=this.route.snapshot.paramMap.get("clinicalProviderLocationId");this.setClinicalProviderLocationId(a)}}validateImportData(s){return this.vm$.pipe((0,C.w)(o=>this.clinicalProviderLocationAvailabilityService.validateClinicalProviderLocationAvailabilityExcelData(s,o.clinicalProviderLocations)))}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(B.q),b.LFG(j.F0),b.LFG(j.gz),b.LFG(G.F),b.LFG(z.o),b.LFG(q))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac}),c})()},30760:(at,K,u)=>{u.d(K,{j:()=>s});var L=u(24280),U=u(60515),R=u(54004),P=u(18505),C=u(63900),w=u(11365),O=u(70262),b=u(22412),B=u(15439),j=u.n(B),G=u(94650),z=u(73602),M=u(30144),x=u(71873),F=u(4523),N=u(56869),$=u(71767),D=u(39646);class H extends $.T_{constructor(v){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=v}Do(v){return this.businessProvider=v,this.serviceContext=v.serviceContext,this.loggingService=v.loggingService,this.execute(),this.response}}var V=u(26177);class Z extends H{constructor(v,E,A){super("ValidateClinicalProviderLocationExcelDataAction"),this.valid=!1,this.excelData=v,this.clinicalProviders=E,this.locations=A}preValidateAction(){const v=[];this.excelData.map((E,A)=>{v.push(E.name),this.validationContext.addRule(new V.mi(`clinicalProviderName_${A}_is_valid}`,"Clinical Provider Is Not Valid","clinicalProvider.name",E.clinicalProvider,this.clinicalProviders,!0)),this.validationContext.addRule(new V.mi(`locationName_${A}_is_valid}`,"Location Is Not Valid","location.name",E.location,this.locations,!0))}),this.validationContext.addRule(new V.cL("nameIsUnique","Name should be unique",v,!0))}performAction(){}finish(){super.finish();const v={};let E=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(A=>{A instanceof V.mi?A.isValid||(v[A.columnName]?v[A.columnName].newNames.includes(A.newName)||v[A.columnName].newNames.push(A.newName):v[A.columnName]={options:A.possibleValueList.map(y=>y.name),newNames:[A.newName]}):A instanceof V.cL&&(A.isValid||(E=A.conflicts))})):this.valid=!0,this.response=(0,D.of)({valid:this.valid,excelData:this.excelData,conflictNames:E,unknownNames:v})}}var X=u(28234);class k extends V.wS{constructor(v,E,A,y,a){super(v,E,A,y,a,!0)}}class Y extends V.ul{constructor(v,E,A,y=!1){super(v,E,y),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=A,this.configureRules()}configureRules(){this.rules.push(new V.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new k("name","The clinicalproviderlocation name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class J extends H{constructor(v){super("CreateClinicalProviderLocationAction"),this.input=v}preValidateAction(){this.validationContext.addRule(new Y("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateClinicalProviderLocation({input:this.input}).pipe((0,C.w)(v=>(0,X.of)(v.data.created)))}}class q extends H{constructor(v){super("UpdateClinicalProviderLocationsAction"),this.clinicalProviderLocations=v}preValidateAction(){this.validationContext.addRule(new V.DJ("Input","Input should have values",this.clinicalProviderLocations,!0))}performAction(){this.response=this.businessProvider.data.userUpdateClinicalProviderLocations({input:{clinicalProviderLocations:this.clinicalProviderLocations}}).pipe((0,C.w)(v=>(0,D.of)(v.data.updated)))}}class I extends H{constructor(v,E){super("UpdateClinicalProviderLocationAction"),this.clinicalProviderLocation=v,this.clinicalProviderLocationId=E}preValidateAction(){this.validationContext.addRule(new V.DJ("Input","Input should have values",this.clinicalProviderLocation,!0)).addRule(new V.xF("Id","Id should be a CUID and not null",this.clinicalProviderLocationId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateClinicalProviderLocation({clinicalProviderLocationId:this.clinicalProviderLocationId,input:this.clinicalProviderLocation}).pipe((0,C.w)(v=>(0,D.of)(v.data.updated)))}}let c=(()=>{class o extends $.nH{constructor(E,A,y){super("NotificationService.ClinicalProviderLocationBusinessProviderService",E,y),this.data=A}createClinicalProviderLocation(E){const A=new J(E);return A.Do(this),A.response}updateClinicalProviderLocation(E,A){const y=new I(E,A);return y.Do(this),y.response}importClinicalProviderLocations(E){const A=new q(E);return A.Do(this),A.response}validateClinicalProviderLocationExcelData(E,A,y){const a=new Z(E,A,y);return a.Do(this),a.response}}return o.\u0275fac=function(E){return new(E||o)(G.LFG(N.ed),G.LFG(z.q),G.LFG($.oI))},o.\u0275prov=G.Yz7({token:o,factory:o.\u0275fac,providedIn:"root"}),o})(),n=(()=>{class o extends $.nH{constructor(E,A,y){super("ClinicalProviderLocationService",y,E),this.businessProvider=A}createClinicalProviderLocation(E){const A=Object.fromEntries(Object.entries(E).filter(([y,a])=>null!==a));return this.businessProvider.createClinicalProviderLocation(A)}updateClinicalProviderLocation(E,A){return this.businessProvider.updateClinicalProviderLocation(E,A)}importClinicalProviderLocations(E){return this.businessProvider.importClinicalProviderLocations(E)}validateClinicalProviderLocationExcelData(E,A,y){return this.businessProvider.validateClinicalProviderLocationExcelData(E,A,y)}}return o.\u0275fac=function(E){return new(E||o)(G.LFG(c,8),G.LFG(c),G.LFG(N.ed))},o.\u0275prov=G.Yz7({token:o,factory:o.\u0275fac,providedIn:"root"}),o})(),s=(()=>{class o extends L.m1{constructor(E,A,y,a,l,e){if(super({loading:!1,clinicalProviderLocations:[],done:!1,searchQuery:"",formName:void 0,clinicalProviderId:void 0,locationId:void 0,paging:{limit:1e4,skip:0}}),this.data=E,this.router=A,this.route=y,this.toast=a,this.formService=l,this.clinicalProviderLocationService=e,this.errors$=this.select(t=>t.errors),this.loading$=this.select(t=>t.loading),this.done$=this.select(t=>t.done),this.item$=this.select(t=>t.item),this.formattedItem$=this.select(this.item$,t=>{var h,m,g,d,p,f,S;const Q=[];null===(m=null===(h=t?.clinicalProvider)||void 0===h?void 0:h.clinicalProviderLocations)||void 0===m||m.map(({clinicalProviderLocationAvailabilities:T})=>{Q.push(...T)});const tt=(0,b.vM)(Q,T=>T.day),et=[];let nt=!1;const ot=j()().format("ll")+"",ct=j()().format("dddd")+"";let rt;for(const T in tt){let it=tt[T];it.sort((_,st)=>Date.parse(_.startTime)-Date.parse(st.startTime)),it=it.map(_=>(_.startTime=j()(_.startTime,"hh:mm A").isValid()?j()(_.startTime,"hh:mm A").format("HH:mm"):_.startTime,_.endTime=j()(_.endTime,"hh:mm A").isValid()?j()(_.endTime,"hh:mm A").format("HH:mm"):_.endTime,_)),T===ct&&(rt=it),et.push({day:T,hours:it}),"Sunday"===T&&(nt=!0)}const lt={day:ot,hours:rt},ht=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];et.sort((T,it)=>ht.indexOf(T.day)-ht.indexOf(it.day));const ut={todayHours:lt,others:et,sundayFlag:nt},pt=Object.assign(Object.assign({},t),{clinicalProvider:Object.assign(Object.assign({},t?.clinicalProvider),{rating:0,locations:null===(d=null===(g=t?.clinicalProvider)||void 0===g?void 0:g.clinicalProviderLocations)||void 0===d?void 0:d.map(({location:T,clinicalProviderLocationAvailabilities:it})=>{var _,st,dt;return{id:T?.id,name:T?.name,locationImages:T.locationImages,endLatitudeProp:T?.latitude,endLongitudeProp:T?.longitude,vendor:null===(st=null===(_=t?.clinicalProvider)||void 0===_?void 0:_.vendor)||void 0===st?void 0:st.name,rating:null!==(dt=t?.clinicalProvider.rating)&&void 0!==dt?dt:0,businessHours:(0,b.f1)(it??[],vt=>vt.day)}}),specialties:null===(f=null===(p=t?.clinicalProvider)||void 0===p?void 0:p.clinicalProviderSpecialties)||void 0===f?void 0:f.map(({specialty:T})=>({name:T?.name})),businessHours:ut}),detailView:!0,formattedDistance:(null!==(S=t?.distance)&&void 0!==S?S:0).toFixed(2),clinicalProviderLocations:[]});return delete pt.clinicalProviderLocations,delete pt.clinicalProviderSpecialties,pt}),this.clinicalProviderLocations$=this.select(t=>t.clinicalProviderLocations),this.formattedClinicalProviderLocations$=this.select(this.clinicalProviderLocations$,t=>t.map(h=>{var m,g,d,p;return Object.assign(Object.assign({},h),{formattedDistance:(null!==(m=h?.distance)&&void 0!==m?m:0).toFixed(2),clinicalProvider:Object.assign(Object.assign({},h.clinicalProvider),{rating:0,specialtiesCount:(null===(g=h.clinicalProvider.clinicalProviderSpecialties)||void 0===g?void 0:g.length)-3,clinicalProviderSpecialties:null===(p=null===(d=h?.clinicalProvider)||void 0===d?void 0:d.clinicalProviderSpecialties)||void 0===p?void 0:p.slice(0,3)})})})),this.clinicalProviders$=this.select(t=>t.clinicalProviders||[]),this.locations$=this.select(t=>t.locations||[]),this.clinicalProviderId$=this.select(t=>t.clinicalProviderId),this.locationId$=this.select(t=>t.locationId),this.paging$=this.select(t=>t.paging),this.searchQuery$=this.select(t=>t.searchQuery),this.formName$=this.select(t=>t.formName),this.providerName$=this.select(t=>t.providerName),this.specialties$=this.select(t=>t.specialties),this.favorite$=this.select(t=>t.favorite),this.locationData$=this.select(t=>t.locationData),this.distance$=this.select(t=>t.distance),this.centerLocation$=this.select(t=>t.centerLocation),this.actionResult$=this.select(this.item$,this.done$,(t,h)=>({item:t,done:h}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.clinicalProviderLocations$,this.clinicalProviders$,this.locations$,(t,h,m,g,d,p,f)=>({errors:t,loading:h,item:m,formName:g,clinicalProviderLocations:d,clinicalProviders:p,locations:f}),{debounce:!0}),this.input$=this.select(this.paging$,this.clinicalProviderId$,this.locationId$,this.searchQuery$,this.providerName$,this.specialties$,this.favorite$,this.distance$,this.centerLocation$,this.locationData$,(t,h,m,g,d,p,f,S,Q,W)=>({limit:t.limit,skip:t.skip,name:g,clinicalProviderId:h,locationId:m,total:t.total,providerName:d,specialties:p,favorite:f,distance:S,centerLocation:Q,locationData:W})),this.setFormName=this.updater((t,h)=>Object.assign(Object.assign({},t),{formName:h})),this.setClinicalProviderId=this.updater((t,h)=>Object.assign(Object.assign({},t),{clinicalProviderId:h})),this.setLocationId=this.updater((t,h)=>Object.assign(Object.assign({},t),{locationId:h})),this.setProviderName=this.updater((t,h)=>Object.assign(Object.assign({},t),{providerName:h})),this.setSpecialties=this.updater((t,h)=>Object.assign(Object.assign({},t),{specialties:h})),this.setFavorite=this.updater((t,h)=>Object.assign(Object.assign({},t),{favorite:h})),this.setLocationData=this.updater((t,h)=>Object.assign(Object.assign({},t),{locationData:h})),this.setDistance=this.updater((t,h)=>Object.assign(Object.assign({},t),{distance:h})),this.setCenterLocation=this.updater((t,h)=>Object.assign(Object.assign({},t),{centerLocation:h})),this.setSkip=this.updater((t,h)=>Object.assign(Object.assign({},t),{paging:Object.assign(Object.assign({},t.paging),{skip:h})})),this.setLimit=this.updater((t,h)=>Object.assign(Object.assign({},t),{paging:Object.assign(Object.assign({},t.paging),{limit:h})})),this.filterClinicalProviders=t=>this.data.userSelectClinicalProviders({input:{name:t}}).pipe((0,L._b)(h=>{let m=h.data.items;return this.patchState({clinicalProviders:m}),m},h=>this.patchState({errors:h.graphQLErrors?h.graphQLErrors:h})),(0,R.U)(h=>h.data.items)),this.filterLocations=t=>this.data.userSelectLocations({input:{name:t}}).pipe((0,L._b)(h=>{let m=h.data.items;return this.patchState({locations:m}),m},h=>this.patchState({errors:h.graphQLErrors?h.graphQLErrors:h})),(0,R.U)(h=>h.data.items)),this.addClinicalProvider=this.updater((t,h)=>Object.assign(Object.assign({},t),{clinicalProviders:t.clinicalProviders.concat(h)})),this.addLocation=this.updater((t,h)=>Object.assign(Object.assign({},t),{locations:t.locations.concat(h)})),this.updateClinicalProvider=this.updater((t,h)=>{var m;return Object.assign(Object.assign({},t),{clinicalProviderLocations:null===(m=t.clinicalProviderLocations)||void 0===m?void 0:m.map(g=>h.id===g.clinicalProviderId?Object.assign(Object.assign({},g),{clinicalProvider:h}):g)})}),this.setItem=this.updater((t,h)=>Object.assign(Object.assign({},t),{item:h})),this.addNewClinicalProviderLocation=this.updater((t,h)=>Object.assign(Object.assign({},t),{clinicalProviderLocations:[...t.clinicalProviderLocations,h]})),this.updateClinicalProviderLocation=this.updater((t,h)=>Object.assign(Object.assign({},t),{clinicalProviderLocations:t.clinicalProviderLocations.map(m=>m.id===h.id?h:m)})),this.clear=this.updater(t=>Object.assign(Object.assign({},t),{clinicalProviderLocations:[]})),this.addClinicalProviderLocations=this.updater((t,h)=>Object.assign(Object.assign({},t),{clinicalProviderLocations:t.clinicalProviderLocations.concat(h)})),this.updateClinicalProviderLocations=this.updater((t,h)=>Object.assign(Object.assign({},t),{clinicalProviderLocations:t.clinicalProviderLocations.map(m=>h.find(d=>d.id===m.id)||m)})),this.setSearchQuery=this.updater((t,h)=>Object.assign(Object.assign({},t),{searchQuery:h})),this.loadClinicalProviderLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(h=>this.data.userClinicalProviderLocation({clinicalProviderLocationId:h}).pipe((0,L._b)(m=>(console.log("res.data.item",m.data.item),this.patchState({item:m.data.item,errors:m.errors,loading:!1})),m=>this.patchState({loading:!1,errors:m.graphQLErrors?m.graphQLErrors:m})))))),this.loadClinicalProviderLocationsEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.input$),(0,C.w)(([h,m])=>this.data.userClinicalProviderLocations({input:m}).pipe((0,L._b)(g=>this.patchState({paging:{limit:m.limit,skip:m.skip,total:g.data.count.total},clinicalProviderLocations:"all"!==m.clinicalProviderId?g.data.items:[],errors:g.errors,loading:!1}),g=>this.patchState({loading:!1,errors:g.graphQLErrors?g.graphQLErrors:g})))))),this.createClinicalProviderLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(h=>this.clinicalProviderLocationService.createClinicalProviderLocation(Object.assign({},h)).pipe((0,L._b)(m=>{this.addNewClinicalProviderLocation(m),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:m,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},m=>{m.graphQLErrors?(this.toast.error(m.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:m.graphQLErrors?m.graphQLErrors:m})):(this.toast.error(m.Message),this.formService.setErrors(m.Data))}))))),this.updateClinicalProviderLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([h,m])=>this.clinicalProviderLocationService.updateClinicalProviderLocation(h,h.id).pipe((0,L._b)(g=>{this.updateClinicalProviderLocation(g),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:g,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},g=>{g.graphQLErrors?(this.toast.error(g.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:g.graphQLErrors?g.graphQLErrors:g})):(this.toast.error(g.Message),this.formService.setErrors(g.Data))}))))),this.deleteClinicalProviderLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([h,m])=>this.data.userDeleteClinicalProviderLocation({clinicalProviderLocationId:m.id}).pipe((0,L._b)(g=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:g.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},g=>{g.graphQLErrors?(this.toast.error(g.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:g.graphQLErrors?g.graphQLErrors:g})):(this.toast.error(g.Message),this.formService.setErrors(g.Data))}))))),this.importExcelEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(h=>this.clinicalProviderLocationService.importClinicalProviderLocations(h).pipe((0,O.K)(m=>{var g;return this.toast.error(null!==(g=m.Message)&&void 0!==g?g:"Failed to save",{duration:3e3}),U.E}),(0,P.b)(m=>{const g=JSON.parse(m.created),d=JSON.parse(m.updated),p=JSON.parse(m.failed),f=g.length+d.length+p.length;this.addClinicalProviderLocations(g),this.updateClinicalProviderLocations(d),this.toast.success(`${g.length} created, ${d.length} updated, ${p.length} failed of total ${f}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("clinicalProviderLocationId")?this.setFormName("clinicalProviderLocation_edit"):this.setFormName("clinicalProviderLocation_create"),this.route.snapshot.paramMap.has("clinicalProviderId")){var i=this.route.snapshot.paramMap.get("clinicalProviderId");this.setClinicalProviderId(i)}if(this.route.snapshot.paramMap.has("locationId")){var r=this.route.snapshot.paramMap.get("locationId");this.setLocationId(r)}}validateImportData(E){return this.vm$.pipe((0,C.w)(A=>this.clinicalProviderLocationService.validateClinicalProviderLocationExcelData(E,A.clinicalProviders,A.locations)))}}return o.\u0275fac=function(E){return new(E||o)(G.LFG(z.q),G.LFG(M.F0),G.LFG(M.gz),G.LFG(x.F),G.LFG(F.o),G.LFG(n))},o.\u0275prov=G.Yz7({token:o,factory:o.\u0275fac}),o})()},94929:(at,K,u)=>{u.d(K,{D:()=>I});var L=u(24280),U=u(60515),R=u(54004),P=u(18505),C=u(63900),w=u(11365),O=u(70262),b=u(94650),B=u(73602),j=u(30144),G=u(71873),z=u(4523),M=u(56869),x=u(71767),F=u(39646);class N extends x.T_{constructor(n){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=n}Do(n){return this.businessProvider=n,this.serviceContext=n.serviceContext,this.loggingService=n.loggingService,this.execute(),this.response}}var $=u(26177);class D extends N{constructor(n,s){super("ValidateClinicalProviderExcelDataAction"),this.valid=!1,this.excelData=n,this.vendors=s}preValidateAction(){const n=[];this.excelData.map((s,o)=>{n.push(s.name),this.validationContext.addRule(new $.mi(`vendorName_${o}_is_valid}`,"Vendor Is Not Valid","vendor.name",s.vendor,this.vendors,!0))}),this.validationContext.addRule(new $.cL("nameIsUnique","Name should be unique",n,!0))}performAction(){}finish(){super.finish();const n={};let s=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(o=>{o instanceof $.mi?o.isValid||(n[o.columnName]?n[o.columnName].newNames.includes(o.newName)||n[o.columnName].newNames.push(o.newName):n[o.columnName]={options:o.possibleValueList.map(v=>v.name),newNames:[o.newName]}):o instanceof $.cL&&(o.isValid||(s=o.conflicts))})):this.valid=!0,this.response=(0,F.of)({valid:this.valid,excelData:this.excelData,conflictNames:s,unknownNames:n})}}var H=u(28234);class V extends $.wS{constructor(n,s,o,v,E){super(n,s,o,v,E,!0)}}class Z extends $.ul{constructor(n,s,o,v=!1){super(n,s,v),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=o,this.configureRules()}configureRules(){this.rules.push(new $.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new V("name","The clinicalprovider name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class X extends N{constructor(n){super("CreateClinicalProviderAction"),this.input=n}preValidateAction(){this.validationContext.addRule(new Z("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateClinicalProvider({input:this.input}).pipe((0,C.w)(n=>(0,H.of)(n.data.created)))}}class k extends N{constructor(n){super("UpdateClinicalProvidersAction"),this.clinicalProviders=n}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.clinicalProviders,!0))}performAction(){this.response=this.businessProvider.data.userUpdateClinicalProviders({input:{clinicalProviders:this.clinicalProviders}}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}class Y extends N{constructor(n,s){super("UpdateClinicalProviderAction"),this.clinicalProvider=n,this.clinicalProviderId=s}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.clinicalProvider,!0)).addRule(new $.xF("Id","Id should be a CUID and not null",this.clinicalProviderId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateClinicalProvider({clinicalProviderId:this.clinicalProviderId,input:this.clinicalProvider}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}let J=(()=>{class c extends x.nH{constructor(s,o,v){super("NotificationService.ClinicalProviderBusinessProviderService",s,v),this.data=o}createClinicalProvider(s){const o=new X(s);return o.Do(this),o.response}updateClinicalProvider(s,o){const v=new Y(s,o);return v.Do(this),v.response}importClinicalProviders(s){const o=new k(s);return o.Do(this),o.response}validateClinicalProviderExcelData(s,o){const v=new D(s,o);return v.Do(this),v.response}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(M.ed),b.LFG(B.q),b.LFG(x.oI))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),q=(()=>{class c extends x.nH{constructor(s,o,v){super("ClinicalProviderService",v,s),this.businessProvider=o}createClinicalProvider(s){const o=Object.fromEntries(Object.entries(s).filter(([v,E])=>null!==E));return this.businessProvider.createClinicalProvider(o)}updateClinicalProvider(s,o){return this.businessProvider.updateClinicalProvider(s,o)}importClinicalProviders(s){return this.businessProvider.importClinicalProviders(s)}validateClinicalProviderExcelData(s,o){return this.businessProvider.validateClinicalProviderExcelData(s,o)}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(J,8),b.LFG(J),b.LFG(M.ed))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),I=(()=>{class c extends L.m1{constructor(s,o,v,E,A,y){if(super({loading:!1,clinicalProviders:[],done:!1,searchQuery:"",formName:void 0,vendorId:void 0,specialtyFilterParam:[],serviceFilterParam:[],clinicalProvidersSpecial:[],clinicalProviderLocations:[],clinicalProviderId:void 0,clinicalProviderLocationId:void 0,paging:{limit:1e4,skip:0},locationFilterParam:[],distance:void 0,isDoctorsPage:!1}),this.data=s,this.router=o,this.route=v,this.toast=E,this.formService=A,this.clinicalProviderService=y,this.errors$=this.select(a=>a.errors),this.favorites$=this.select(a=>a.favorites),this.loading$=this.select(a=>a.loading),this.done$=this.select(a=>a.done),this.item$=this.select(a=>a.item),this.clinicalProviders$=this.select(a=>a.clinicalProviders),this.specialtyFilterParam$=this.select(a=>a.specialtyFilterParam),this.serviceFilterParam$=this.select(a=>a.serviceFilterParam),this.vendors$=this.select(a=>a.vendors||[]),this.clinicalProviderId$=this.select(a=>a.clinicalProviderId),this.clinicalProviderLocationId$=this.select(a=>a.clinicalProviderLocationId),this.locationId$=this.select(a=>a.locationId),this.clinicalProvidersSpecial$=this.select(a=>a.clinicalProvidersSpecial),this.clinicalProviderLocations$=this.select(a=>a.clinicalProviderLocations),this.vendorId$=this.select(a=>a.vendorId),this.paging$=this.select(a=>a.paging),this.searchQuery$=this.select(a=>a.searchQuery),this.formName$=this.select(a=>a.formName),this.locationFilterParam$=this.select(a=>a.locationFilterParam),this.distance$=this.select(a=>a.distance),this.isDoctorsPage$=this.select(a=>a.isDoctorsPage),this.actionResult$=this.select(this.item$,this.done$,(a,l)=>({item:a,done:l}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.clinicalProviders$,this.vendors$,(a,l,e,i,r,t)=>({errors:a,loading:l,item:e,formName:i,clinicalProviders:r,vendors:t}),{debounce:!0}),this.input$=this.select(this.paging$,this.vendorId$,this.searchQuery$,this.specialtyFilterParam$,this.serviceFilterParam$,this.clinicalProviderId$,this.clinicalProviderLocationId$,this.locationFilterParam$,this.distance$,this.isDoctorsPage$,this.favorites$,(a,l,e,i,r,t,h,m,g,d,p)=>({limit:a.limit,skip:a.skip,name:e,vendorId:l,specialites:i,services:r,total:a.total,clinicalProviderId:t,clinicalProviderLocationId:h,centerLocation:m,distance:g,isDoctorsPage:d,favorites:p})),this.setFormName=this.updater((a,l)=>Object.assign(Object.assign({},a),{formName:l})),this.setClinicalProviderId=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderId:l})),this.setClinicalProviderLocationId=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviderLocationId:l})),this.setLocationId=this.updater((a,l)=>Object.assign(Object.assign({},a),{locationId:l})),this.setFavorites=this.updater((a,l)=>Object.assign(Object.assign({},a),{favorites:l})),this.setSpecialtyFilterParam=this.updater((a,l)=>Object.assign(Object.assign({},a),{specialtyFilterParam:l})),this.setServiceFilterParam=this.updater((a,l)=>Object.assign(Object.assign({},a),{serviceFilterParam:l})),this.setLocationFilterParam=this.updater((a,l)=>Object.assign(Object.assign({},a),{locationFilterParam:l})),this.setDistance=this.updater((a,l)=>Object.assign(Object.assign({},a),{distance:l})),this.setVendorId=this.updater((a,l)=>Object.assign(Object.assign({},a),{vendorId:l})),this.setIsDoctorsPage=this.updater((a,l)=>Object.assign(Object.assign({},a),{isDoctorsPage:l})),this.setSkip=this.updater((a,l)=>Object.assign(Object.assign({},a),{paging:Object.assign(Object.assign({},a.paging),{skip:l})})),this.setLimit=this.updater((a,l)=>Object.assign(Object.assign({},a),{paging:Object.assign(Object.assign({},a.paging),{limit:l})})),this.filterVendors=a=>this.data.userSelectVendors({input:{name:a}}).pipe((0,L._b)(l=>{const e=l.data.items;return this.patchState({vendors:e}),e},l=>this.patchState({errors:l.graphQLErrors?l.graphQLErrors:l})),(0,R.U)(l=>l.data.items)),this.addVendor=this.updater((a,l)=>Object.assign(Object.assign({},a),{vendors:a.vendors.concat(l)})),this.setItem=this.updater((a,l)=>Object.assign(Object.assign({},a),{item:l})),this.addNewClinicalProvider=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviders:[...a.clinicalProviders,l]})),this.removeClinicalProvider=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviders:a.clinicalProviders.filter(e=>e.id!==l.id)})),this.updateClinicalProvider=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviders:a.clinicalProviders.map(e=>e.id===l.id?l:e)})),this.addClinicalProviders=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviders:a.clinicalProviders.concat(l)})),this.updateClinicalProviders=this.updater((a,l)=>Object.assign(Object.assign({},a),{clinicalProviders:a.clinicalProviders.map(e=>l.find(r=>r.id===e.id)||e)})),this.setSearchQuery=this.updater((a,l)=>Object.assign(Object.assign({},a),{searchQuery:l})),this.loadClinicalProviderEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(l=>this.data.userClinicalProvider({clinicalProviderId:l}).pipe((0,L._b)(e=>this.patchState({item:e.data.item,errors:e.errors,loading:!1}),e=>this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})))))),this.loadClinicalProvidersEffect=this.effect(a=>a.pipe((0,P.b)(()=>{this.patchState({loading:!0})}),(0,w.M)(this.input$),(0,C.w)(([l,e])=>(console.log("input",e),this.data.userClinicalProviders({input:e}).pipe((0,L._b)(i=>{var r;const t=[];return null===(r=i.data.items)||void 0===r||r.map(h=>{var m;null===(m=h.clinicalProviderLocations)||void 0===m||m.forEach(g=>{var d,p,f;t.push({latitude:null===(d=g.location)||void 0===d?void 0:d.latitude,longitude:null===(p=g.location)||void 0===p?void 0:p.longitude,id:g.id,name:null===(f=g.location)||void 0===f?void 0:f.name,clinicalProvider:h,location:g.location})})}),this.patchState({paging:{limit:e.limit,skip:e.skip,total:i.data.count.total},clinicalProviders:i.data.items,clinicalProviderLocations:t,errors:i.errors,loading:!1})},i=>this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i}))))))),this.loadClinicalProvidersSpecialEffect=this.effect(a=>a.pipe((0,P.b)(()=>{this.patchState({loading:!0})}),(0,w.M)(this.input$),(0,C.w)(([l,e])=>this.data.userClinicalProviders({input:e}).pipe((0,L._b)(i=>this.patchState({paging:{limit:e.limit,skip:e.skip,total:i.data.count.total},clinicalProvidersSpecial:i.data.items,errors:i.errors,loading:!1}),i=>this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})))))),this.createClinicalProviderEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(l=>this.clinicalProviderService.createClinicalProvider(Object.assign({},l)).pipe((0,L._b)(e=>{this.addNewClinicalProvider(e),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:e,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},e=>{e.graphQLErrors?(this.toast.error(e.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})):(this.toast.error(e.Message),this.formService.setErrors(e.Data))}))))),this.updateClinicalProviderEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([l,e])=>this.clinicalProviderService.updateClinicalProvider(l,l.id).pipe((0,L._b)(i=>{this.updateClinicalProvider(i),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:i,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.deleteClinicalProviderEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([l,e])=>this.data.userDeleteClinicalProvider({clinicalProviderId:e.id}).pipe((0,L._b)(i=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:i.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.importExcelEffect=this.effect(a=>a.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(l=>this.clinicalProviderService.importClinicalProviders(l).pipe((0,O.K)(e=>{var i;return this.toast.error(null!==(i=e.Message)&&void 0!==i?i:"Failed to save",{duration:3e3}),U.E}),(0,P.b)(e=>{const i=JSON.parse(e.created),r=JSON.parse(e.updated),t=JSON.parse(e.failed),h=i.length+r.length+t.length;this.addClinicalProviders(i),this.updateClinicalProviders(r),this.toast.success(`${i.length} created, ${r.length} updated, ${t.length} failed of total ${h}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("clinicalProviderId")?this.setFormName("clinicalProvider_edit"):this.setFormName("clinicalProvider_create"),this.route.snapshot.paramMap.has("vendorId")){const a=this.route.snapshot.paramMap.get("vendorId");this.setVendorId(a)}}validateImportData(s){return this.vm$.pipe((0,C.w)(o=>this.clinicalProviderService.validateClinicalProviderExcelData(s,o.vendors)))}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(B.q),b.LFG(j.F0),b.LFG(j.gz),b.LFG(G.F),b.LFG(z.o),b.LFG(q))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac}),c})()},56794:(at,K,u)=>{u.d(K,{F:()=>q});var L=u(24280),U=u(60515),R=u(18505),P=u(63900),C=u(11365),w=u(70262),O=u(94650),b=u(73602),B=u(30144),j=u(71873),G=u(4523),z=u(56869),M=u(71767),x=u(39646);class F extends M.T_{constructor(c){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=c}Do(c){return this.businessProvider=c,this.serviceContext=c.serviceContext,this.loggingService=c.loggingService,this.execute(),this.response}}var N=u(26177);class $ extends F{constructor(c){super("ValidateDocumentExcelDataAction"),this.valid=!1,this.excelData=c}preValidateAction(){const c=[];this.excelData.map((n,s)=>{c.push(n.name)}),this.validationContext.addRule(new N.cL("nameIsUnique","Name should be unique",c,!0))}performAction(){}finish(){super.finish();const c={};let n=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(s=>{s instanceof N.mi?s.isValid||(c[s.columnName]?c[s.columnName].newNames.includes(s.newName)||c[s.columnName].newNames.push(s.newName):c[s.columnName]={options:s.possibleValueList.map(o=>o.name),newNames:[s.newName]}):s instanceof N.cL&&(s.isValid||(n=s.conflicts))})):this.valid=!0,this.response=(0,x.of)({valid:this.valid,excelData:this.excelData,conflictNames:n,unknownNames:c})}}var D=u(28234);class H extends N.wS{constructor(c,n,s,o,v){super(c,n,s,o,v,!0)}}class V extends N.ul{constructor(c,n,s,o=!1){super(c,n,o),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=s,this.configureRules()}configureRules(){this.rules.push(new N.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new H("name","The documenttype name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class Z extends F{constructor(c){super("CreateDocumentAction"),this.input=c}preValidateAction(){this.validationContext.addRule(new V("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateDocument({input:this.input}).pipe((0,P.w)(c=>(0,D.of)(c.data.created)))}}class X extends F{constructor(c){super("UpdateDocumentsAction"),this.documents=c}preValidateAction(){this.validationContext.addRule(new N.DJ("Input","Input should have values",this.documents,!0))}performAction(){this.response=this.businessProvider.data.userUpdateDocuments({input:{documents:this.documents}}).pipe((0,P.w)(c=>(0,x.of)(c.data.updated)))}}class k extends F{constructor(c,n){super("UpdateDocumentAction"),this.document=c,this.documentId=n}preValidateAction(){this.validationContext.addRule(new N.DJ("Input","Input should have values",this.document,!0)).addRule(new N.xF("Id","Id should be a CUID and not null",this.documentId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateDocument({documentId:this.documentId,input:this.document}).pipe((0,P.w)(c=>(0,x.of)(c.data.updated)))}}let Y=(()=>{class I extends M.nH{constructor(n,s,o){super("NotificationService.DocumentBusinessProviderService",n,o),this.data=s}createDocument(n){const s=new Z(n);return s.Do(this),s.response}updateDocument(n,s){const o=new k(n,s);return o.Do(this),o.response}importDocuments(n){const s=new X(n);return s.Do(this),s.response}validateDocumentExcelData(n){const s=new $(n);return s.Do(this),s.response}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(z.ed),O.LFG(b.q),O.LFG(M.oI))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac,providedIn:"root"}),I})(),J=(()=>{class I extends M.nH{constructor(n,s,o){super("DocumentService",o,n),this.businessProvider=s}createDocument(n){const s=Object.fromEntries(Object.entries(n).filter(([o,v])=>null!==v));return this.businessProvider.createDocument(s)}updateDocument(n,s){return this.businessProvider.updateDocument(n,s)}importDocuments(n){return this.businessProvider.importDocuments(n)}validateDocumentExcelData(n){return this.businessProvider.validateDocumentExcelData(n)}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(Y,8),O.LFG(Y),O.LFG(z.ed))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac,providedIn:"root"}),I})(),q=(()=>{class I extends L.m1{constructor(n,s,o,v,E,A){super({loading:!1,documents:[],done:!1,searchQuery:"",formName:void 0,paging:{limit:1e4,skip:0}}),this.data=n,this.router=s,this.route=o,this.toast=v,this.formService=E,this.documentService=A,this.errors$=this.select(a=>a.errors),this.loading$=this.select(a=>a.loading),this.done$=this.select(a=>a.done),this.item$=this.select(a=>a.item),this.documents$=this.select(a=>a.documents),this.paging$=this.select(a=>a.paging),this.searchQuery$=this.select(a=>a.searchQuery),this.formName$=this.select(a=>a.formName),this.actionResult$=this.select(this.item$,this.done$,(a,l)=>({item:a,done:l}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.documents$,(a,l,e,i,r)=>({errors:a,loading:l,item:e,formName:i,documents:r}),{debounce:!0}),this.input$=this.select(this.paging$,this.searchQuery$,(a,l)=>({limit:a.limit,skip:a.skip,name:l,total:a.total})),this.setFormName=this.updater((a,l)=>Object.assign(Object.assign({},a),{formName:l})),this.setItem=this.updater((a,l)=>Object.assign(Object.assign({},a),{item:l})),this.addNewDocument=this.updater((a,l)=>Object.assign(Object.assign({},a),{documents:[...a.documents,l]})),this.updateDocument=this.updater((a,l)=>Object.assign(Object.assign({},a),{documents:a.documents.map(e=>e.id===l.id?l:e)})),this.addDocuments=this.updater((a,l)=>Object.assign(Object.assign({},a),{documents:a.documents.concat(l)})),this.updateDocuments=this.updater((a,l)=>Object.assign(Object.assign({},a),{documents:a.documents.map(e=>l.find(r=>r.id===e.id)||e)})),this.setSearchQuery=this.updater((a,l)=>Object.assign(Object.assign({},a),{searchQuery:l})),this.loadDocumentEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.data.getDocument(l).pipe((0,L._b)(e=>{this.patchState({item:e,loading:!1})},e=>{console.log(e),this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})}))))),this.loadDocumentsEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.input$),(0,P.w)(([l,e])=>this.data.userDocuments({input:e}).pipe((0,L._b)(i=>this.patchState({paging:{limit:e.limit,skip:e.skip,total:i.data.count.total},documents:i.data.items,errors:i.errors,loading:!1}),i=>this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})))))),this.createDocumentEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>(console.log(l),this.documentService.createDocument(Object.assign({},l)).pipe((0,L._b)(e=>{this.addNewDocument(e),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:e,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},e=>{e.graphQLErrors?(this.toast.error(e.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})):(this.toast.error(e.Message),this.formService.setErrors(e.Data))})))))),this.updateDocumentEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.item$),(0,P.w)(([l,e])=>this.documentService.updateDocument(l,l.id).pipe((0,L._b)(i=>{this.updateDocument(i),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:i,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.deleteDocumentEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.item$),(0,P.w)(([l,e])=>this.data.userDeleteDocument({documentId:e.id,featureName:" "}).pipe((0,L._b)(i=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:i.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.importExcelEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.documentService.importDocuments(l).pipe((0,w.K)(e=>{var i;return this.toast.error(null!==(i=e.Message)&&void 0!==i?i:"Failed to save",{duration:3e3}),U.E}),(0,R.b)(e=>{const i=JSON.parse(e.created),r=JSON.parse(e.updated),t=JSON.parse(e.failed),h=i.length+r.length+t.length;this.addDocuments(i),this.updateDocuments(r),this.toast.success(`${i.length} created, ${r.length} updated, ${t.length} failed of total ${h}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("documentId")?(this.route.snapshot.paramMap.get("documentId"),this.setFormName("document_edit")):this.setFormName("document_create")}validateImportData(n){return this.vm$.pipe((0,P.w)(s=>this.documentService.validateDocumentExcelData(n)))}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(b.q),O.LFG(B.F0),O.LFG(B.gz),O.LFG(j.F),O.LFG(G.o),O.LFG(J))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac}),I})()},32944:(at,K,u)=>{u.d(K,{m:()=>I});var L=u(24280),U=u(60515),R=u(54004),P=u(18505),C=u(63900),w=u(11365),O=u(70262),b=u(94650),B=u(73602),j=u(30144),G=u(71873),z=u(4523),M=u(56869),x=u(71767),F=u(39646);class N extends x.T_{constructor(n){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=n}Do(n){return this.businessProvider=n,this.serviceContext=n.serviceContext,this.loggingService=n.loggingService,this.execute(),this.response}}var $=u(26177);class D extends N{constructor(n,s){super("ValidateFavoriteProviderExcelDataAction"),this.valid=!1,this.excelData=n,this.clinicalProviders=s}preValidateAction(){const n=[];this.excelData.map((s,o)=>{n.push(s.name),this.validationContext.addRule(new $.mi(`clinicalProviderName_${o}_is_valid}`,"Clinical Provider Is Not Valid","clinicalProvider.name",s.clinicalProvider,this.clinicalProviders,!0))}),this.validationContext.addRule(new $.cL("nameIsUnique","Name should be unique",n,!0))}performAction(){}finish(){super.finish();const n={};let s=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(o=>{o instanceof $.mi?o.isValid||(n[o.columnName]?n[o.columnName].newNames.includes(o.newName)||n[o.columnName].newNames.push(o.newName):n[o.columnName]={options:o.possibleValueList.map(v=>v.name),newNames:[o.newName]}):o instanceof $.cL&&(o.isValid||(s=o.conflicts))})):this.valid=!0,this.response=(0,F.of)({valid:this.valid,excelData:this.excelData,conflictNames:s,unknownNames:n})}}var H=u(28234);class V extends $.wS{constructor(n,s,o,v,E){super(n,s,o,v,E,!0)}}class Z extends $.ul{constructor(n,s,o,v=!1){super(n,s,v),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=o,this.configureRules()}configureRules(){this.rules.push(new $.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new V("name","The favoriteprovider name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class X extends N{constructor(n){super("CreateFavoriteProviderAction"),this.input=n}preValidateAction(){this.validationContext.addRule(new Z("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateFavoriteProvider({input:this.input}).pipe((0,C.w)(n=>(0,H.of)(n.data.created)))}}class k extends N{constructor(n){super("UpdateFavoriteProvidersAction"),this.favoriteProviders=n}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.favoriteProviders,!0))}performAction(){this.response=this.businessProvider.data.userUpdateFavoriteProviders({input:{favoriteProviders:this.favoriteProviders}}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}class Y extends N{constructor(n,s){super("UpdateFavoriteProviderAction"),this.favoriteProvider=n,this.favoriteProviderId=s}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.favoriteProvider,!0)).addRule(new $.xF("Id","Id should be a CUID and not null",this.favoriteProviderId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateFavoriteProvider({favoriteProviderId:this.favoriteProviderId,input:this.favoriteProvider}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}let J=(()=>{class c extends x.nH{constructor(s,o,v){super("NotificationService.FavoriteProviderBusinessProviderService",s,v),this.data=o}createFavoriteProvider(s){const o=new X(s);return o.Do(this),o.response}updateFavoriteProvider(s,o){const v=new Y(s,o);return v.Do(this),v.response}importFavoriteProviders(s){const o=new k(s);return o.Do(this),o.response}validateFavoriteProviderExcelData(s,o){const v=new D(s,o);return v.Do(this),v.response}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(M.ed),b.LFG(B.q),b.LFG(x.oI))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),q=(()=>{class c extends x.nH{constructor(s,o,v){super("FavoriteProviderService",v,s),this.businessProvider=o}createFavoriteProvider(s){const o=Object.fromEntries(Object.entries(s).filter(([v,E])=>null!==E));return this.businessProvider.createFavoriteProvider(o)}updateFavoriteProvider(s,o){return this.businessProvider.updateFavoriteProvider(s,o)}importFavoriteProviders(s){return this.businessProvider.importFavoriteProviders(s)}validateFavoriteProviderExcelData(s,o){return this.businessProvider.validateFavoriteProviderExcelData(s,o)}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(J,8),b.LFG(J),b.LFG(M.ed))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),I=(()=>{class c extends L.m1{constructor(s,o,v,E,A,y){if(super({loading:!1,favoriteProviders:[],done:!1,searchQuery:"",formName:void 0,clinicalProviderId:void 0,paging:{limit:1e4,skip:0}}),this.data=s,this.router=o,this.route=v,this.toast=E,this.formService=A,this.favoriteProviderService=y,this.errors$=this.select(e=>e.errors),this.loading$=this.select(e=>e.loading),this.done$=this.select(e=>e.done),this.item$=this.select(e=>e.item),this.favoriteProviders$=this.select(e=>e.favoriteProviders),this.clinicalProviders$=this.select(e=>e.clinicalProviders||[]),this.clinicalProviderId$=this.select(e=>e.clinicalProviderId),this.paging$=this.select(e=>e.paging),this.searchQuery$=this.select(e=>e.searchQuery),this.formName$=this.select(e=>e.formName),this.actionResult$=this.select(this.item$,this.done$,(e,i)=>({item:e,done:i}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.favoriteProviders$,this.clinicalProviders$,(e,i,r,t,h,m)=>({errors:e,loading:i,item:r,formName:t,favoriteProviders:h,clinicalProviders:m}),{debounce:!0}),this.input$=this.select(this.paging$,this.clinicalProviderId$,this.searchQuery$,(e,i,r)=>({limit:e.limit,skip:e.skip,name:r,clinicalProviderId:i,total:e.total})),this.setFormName=this.updater((e,i)=>Object.assign(Object.assign({},e),{formName:i})),this.setClinicalProviderId=this.updater((e,i)=>Object.assign(Object.assign({},e),{clinicalProviderId:i})),this.filterClinicalProviders=e=>this.data.userSelectClinicalProviders({input:{name:e}}).pipe((0,L._b)(i=>{let r=i.data.items;return this.patchState({clinicalProviders:r}),r},i=>this.patchState({errors:i.graphQLErrors?i.graphQLErrors:i})),(0,R.U)(i=>i.data.items)),this.addClinicalProvider=this.updater((e,i)=>Object.assign(Object.assign({},e),{clinicalProviders:e.clinicalProviders.concat(i)})),this.setItem=this.updater((e,i)=>Object.assign(Object.assign({},e),{item:i})),this.addNewFavoriteProvider=this.updater((e,i)=>Object.assign(Object.assign({},e),{favoriteProviders:[...e.favoriteProviders,i]})),this.updateFavoriteProvider=this.updater((e,i)=>Object.assign(Object.assign({},e),{favoriteProviders:e.favoriteProviders.map(r=>r.id===i.id?i:r)})),this.addFavoriteProviders=this.updater((e,i)=>Object.assign(Object.assign({},e),{favoriteProviders:e.favoriteProviders.concat(i)})),this.updateFavoriteProviders=this.updater((e,i)=>Object.assign(Object.assign({},e),{favoriteProviders:e.favoriteProviders.map(r=>i.find(h=>h.id===r.id)||r)})),this.setSearchQuery=this.updater((e,i)=>Object.assign(Object.assign({},e),{searchQuery:i})),this.loadFavoriteProviderEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(i=>this.data.userFavoriteProvider({favoriteProviderId:i}).pipe((0,L._b)(r=>{this.patchState({item:r.data.item,errors:r.errors,loading:!1})},r=>this.patchState({loading:!1,errors:r.graphQLErrors?r.graphQLErrors:r})))))),this.loadFavoriteProvidersEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.input$),(0,C.w)(([i,r])=>this.data.userFavoriteProviders({input:r}).pipe((0,L._b)(t=>this.patchState({paging:{limit:r.limit,skip:r.skip,total:t.data.count.total},favoriteProviders:t.data.items,errors:t.errors,loading:!1}),t=>this.patchState({loading:!1,errors:t.graphQLErrors?t.graphQLErrors:t})))))),this.createFavoriteProviderEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(i=>this.favoriteProviderService.createFavoriteProvider(Object.assign({},i)).pipe((0,L._b)(r=>{this.addNewFavoriteProvider(r),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:r,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},r=>{r.graphQLErrors?(this.toast.error(r.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:r.graphQLErrors?r.graphQLErrors:r})):(this.toast.error(r.Message),this.formService.setErrors(r.Data))}))))),this.updateFavoriteProviderEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([i,r])=>this.favoriteProviderService.updateFavoriteProvider(i,i.id).pipe((0,L._b)(t=>{this.updateFavoriteProvider(t),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:t,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},t=>{t.graphQLErrors?(this.toast.error(t.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:t.graphQLErrors?t.graphQLErrors:t})):(this.toast.error(t.Message),this.formService.setErrors(t.Data))}))))),this.deleteFavoriteProviderEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([i,r])=>this.data.userDeleteFavoriteProvider({favoriteProviderId:r.id}).pipe((0,L._b)(t=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:t.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},t=>{t.graphQLErrors?(this.toast.error(t.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:t.graphQLErrors?t.graphQLErrors:t})):(this.toast.error(t.Message),this.formService.setErrors(t.Data))}))))),this.deleteSpecificFavoriteProviderEffect=this.effect(e=>e.pipe((0,C.w)(i=>this.data.userDeleteFavoriteProvider({favoriteProviderId:i.id}).pipe((0,L._b)(r=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:r.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},r=>{r.graphQLErrors?(this.toast.error(r.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:r.graphQLErrors?r.graphQLErrors:r})):(this.toast.error(r.Message),this.formService.setErrors(r.Data))}))))),this.importExcelEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(i=>this.favoriteProviderService.importFavoriteProviders(i).pipe((0,O.K)(r=>{var t;return this.toast.error(null!==(t=r.Message)&&void 0!==t?t:"Failed to save",{duration:3e3}),U.E}),(0,P.b)(r=>{const t=JSON.parse(r.created),h=JSON.parse(r.updated),m=JSON.parse(r.failed),g=t.length+h.length+m.length;this.addFavoriteProviders(t),this.updateFavoriteProviders(h),this.toast.success(`${t.length} created, ${h.length} updated, ${m.length} failed of total ${g}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("favoriteProviderId")?(this.route.snapshot.paramMap.get("favoriteProviderId"),this.setFormName("favoriteProvider_edit")):this.setFormName("favoriteProvider_create"),this.route.snapshot.paramMap.has("clinicalProviderId")){var l=this.route.snapshot.paramMap.get("clinicalProviderId");this.setClinicalProviderId(l)}}validateImportData(s){return this.vm$.pipe((0,C.w)(o=>this.favoriteProviderService.validateFavoriteProviderExcelData(s,o.clinicalProviders)))}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(B.q),b.LFG(j.F0),b.LFG(j.gz),b.LFG(G.F),b.LFG(z.o),b.LFG(q))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac}),c})()},28816:(at,K,u)=>{u.d(K,{_:()=>q});var L=u(24280),U=u(60515),R=u(18505),P=u(63900),C=u(11365),w=u(70262),O=u(94650),b=u(73602),B=u(30144),j=u(71873),G=u(4523),z=u(56869),M=u(71767),x=u(39646);class F extends M.T_{constructor(c){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=c}Do(c){return this.businessProvider=c,this.serviceContext=c.serviceContext,this.loggingService=c.loggingService,this.execute(),this.response}}var N=u(26177);class $ extends F{constructor(c){super("ValidateGenderExcelDataAction"),this.valid=!1,this.excelData=c}preValidateAction(){const c=[];this.excelData.map((n,s)=>{c.push(n.name)}),this.validationContext.addRule(new N.cL("nameIsUnique","Name should be unique",c,!0))}performAction(){}finish(){super.finish();const c={};let n=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(s=>{s instanceof N.mi?s.isValid||(c[s.columnName]?c[s.columnName].newNames.includes(s.newName)||c[s.columnName].newNames.push(s.newName):c[s.columnName]={options:s.possibleValueList.map(o=>o.name),newNames:[s.newName]}):s instanceof N.cL&&(s.isValid||(n=s.conflicts))})):this.valid=!0,this.response=(0,x.of)({valid:this.valid,excelData:this.excelData,conflictNames:n,unknownNames:c})}}var D=u(28234);class H extends N.wS{constructor(c,n,s,o,v){super(c,n,s,o,v,!0)}}class V extends N.ul{constructor(c,n,s,o=!1){super(c,n,o),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=s,this.configureRules()}configureRules(){this.rules.push(new N.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new H("name","The gender name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class Z extends F{constructor(c){super("CreateGenderAction"),this.input=c}preValidateAction(){this.validationContext.addRule(new V("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateGender({input:this.input}).pipe((0,P.w)(c=>(0,D.of)(c.data.created)))}}class X extends F{constructor(c){super("UpdateGendersAction"),this.genders=c}preValidateAction(){this.validationContext.addRule(new N.DJ("Input","Input should have values",this.genders,!0))}performAction(){this.response=this.businessProvider.data.userUpdateGenders({input:{genders:this.genders}}).pipe((0,P.w)(c=>(0,x.of)(c.data.updated)))}}class k extends F{constructor(c,n){super("UpdateGenderAction"),this.gender=c,this.genderId=n}preValidateAction(){this.validationContext.addRule(new N.DJ("Input","Input should have values",this.gender,!0)).addRule(new N.xF("Id","Id should be a CUID and not null",this.genderId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateGender({genderId:this.genderId,input:this.gender}).pipe((0,P.w)(c=>(0,x.of)(c.data.updated)))}}let Y=(()=>{class I extends M.nH{constructor(n,s,o){super("NotificationService.GenderBusinessProviderService",n,o),this.data=s}createGender(n){const s=new Z(n);return s.Do(this),s.response}updateGender(n,s){const o=new k(n,s);return o.Do(this),o.response}importGenders(n){const s=new X(n);return s.Do(this),s.response}validateGenderExcelData(n){const s=new $(n);return s.Do(this),s.response}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(z.ed),O.LFG(b.q),O.LFG(M.oI))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac,providedIn:"root"}),I})(),J=(()=>{class I extends M.nH{constructor(n,s,o){super("GenderService",o,n),this.businessProvider=s}createGender(n){const s=Object.fromEntries(Object.entries(n).filter(([o,v])=>null!==v));return this.businessProvider.createGender(s)}updateGender(n,s){return this.businessProvider.updateGender(n,s)}importGenders(n){return this.businessProvider.importGenders(n)}validateGenderExcelData(n){return this.businessProvider.validateGenderExcelData(n)}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(Y,8),O.LFG(Y),O.LFG(z.ed))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac,providedIn:"root"}),I})(),q=(()=>{class I extends L.m1{constructor(n,s,o,v,E,A){super({loading:!1,genders:[],done:!1,searchQuery:"",formName:void 0,paging:{limit:1e4,skip:0}}),this.data=n,this.router=s,this.route=o,this.toast=v,this.formService=E,this.genderService=A,this.errors$=this.select(a=>a.errors),this.loading$=this.select(a=>a.loading),this.done$=this.select(a=>a.done),this.item$=this.select(a=>a.item),this.genders$=this.select(a=>a.genders),this.paging$=this.select(a=>a.paging),this.searchQuery$=this.select(a=>a.searchQuery),this.formName$=this.select(a=>a.formName),this.actionResult$=this.select(this.item$,this.done$,(a,l)=>({item:a,done:l}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.genders$,(a,l,e,i,r)=>({errors:a,loading:l,item:e,formName:i,genders:r}),{debounce:!0}),this.input$=this.select(this.paging$,this.searchQuery$,(a,l)=>({limit:a.limit,skip:a.skip,name:l,total:a.total})),this.setFormName=this.updater((a,l)=>Object.assign(Object.assign({},a),{formName:l})),this.setItem=this.updater((a,l)=>Object.assign(Object.assign({},a),{item:l})),this.addNewGender=this.updater((a,l)=>Object.assign(Object.assign({},a),{genders:[...a.genders,l]})),this.updateGender=this.updater((a,l)=>Object.assign(Object.assign({},a),{genders:a.genders.map(e=>e.id===l.id?l:e)})),this.addGenders=this.updater((a,l)=>Object.assign(Object.assign({},a),{genders:a.genders.concat(l)})),this.updateGenders=this.updater((a,l)=>Object.assign(Object.assign({},a),{genders:a.genders.map(e=>l.find(r=>r.id===e.id)||e)})),this.setSearchQuery=this.updater((a,l)=>Object.assign(Object.assign({},a),{searchQuery:l})),this.loadGenderEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.data.userGender({genderId:l}).pipe((0,L._b)(e=>{this.patchState({item:e.data.item,errors:e.errors,loading:!1})},e=>this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})))))),this.loadGendersEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.input$),(0,P.w)(([l,e])=>this.data.userGenders({input:e}).pipe((0,L._b)(i=>this.patchState({paging:{limit:e.limit,skip:e.skip,total:i.data.count.total},genders:i.data.items,errors:i.errors,loading:!1}),i=>this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})))))),this.createGenderEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.genderService.createGender(Object.assign({},l)).pipe((0,L._b)(e=>{this.addNewGender(e),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:e,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},e=>{e.graphQLErrors?(this.toast.error(e.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})):(this.toast.error(e.Message),this.formService.setErrors(e.Data))}))))),this.updateGenderEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.item$),(0,P.w)(([l,e])=>this.genderService.updateGender(l,l.id).pipe((0,L._b)(i=>{this.updateGender(i),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:i,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.deleteGenderEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.item$),(0,P.w)(([l,e])=>this.data.userDeleteGender({genderId:e.id}).pipe((0,L._b)(i=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:i.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.importExcelEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.genderService.importGenders(l).pipe((0,w.K)(e=>{var i;return this.toast.error(null!==(i=e.Message)&&void 0!==i?i:"Failed to save",{duration:3e3}),U.E}),(0,R.b)(e=>{const i=JSON.parse(e.created),r=JSON.parse(e.updated),t=JSON.parse(e.failed),h=i.length+r.length+t.length;this.addGenders(i),this.updateGenders(r),this.toast.success(`${i.length} created, ${r.length} updated, ${t.length} failed of total ${h}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("genderId")?(this.route.snapshot.paramMap.get("genderId"),this.setFormName("gender_edit")):this.setFormName("gender_create")}validateImportData(n){return this.vm$.pipe((0,P.w)(s=>this.genderService.validateGenderExcelData(n)))}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(b.q),O.LFG(B.F0),O.LFG(B.gz),O.LFG(j.F),O.LFG(G.o),O.LFG(J))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac}),I})()},3866:(at,K,u)=>{u.d(K,{v:()=>I});var L=u(24280),U=u(60515),R=u(54004),P=u(18505),C=u(63900),w=u(11365),O=u(70262),b=u(94650),B=u(73602),j=u(30144),G=u(71873),z=u(4523),M=u(56869),x=u(71767),F=u(39646);class N extends x.T_{constructor(n){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=n}Do(n){return this.businessProvider=n,this.serviceContext=n.serviceContext,this.loggingService=n.loggingService,this.execute(),this.response}}var $=u(26177);class D extends N{constructor(n,s){super("ValidateLocationExcelDataAction"),this.valid=!1,this.excelData=n,this.placeOfServices=s}preValidateAction(){const n=[];this.excelData.map((s,o)=>{n.push(s.name),this.validationContext.addRule(new $.mi(`placeOfServiceName_${o}_is_valid}`,"Place of Service Is Not Valid","placeOfService.name",s.placeOfService,this.placeOfServices,!0))}),this.validationContext.addRule(new $.cL("nameIsUnique","Name should be unique",n,!0))}performAction(){}finish(){super.finish();const n={};let s=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(o=>{o instanceof $.mi?o.isValid||(n[o.columnName]?n[o.columnName].newNames.includes(o.newName)||n[o.columnName].newNames.push(o.newName):n[o.columnName]={options:o.possibleValueList.map(v=>v.name),newNames:[o.newName]}):o instanceof $.cL&&(o.isValid||(s=o.conflicts))})):this.valid=!0,this.response=(0,F.of)({valid:this.valid,excelData:this.excelData,conflictNames:s,unknownNames:n})}}var H=u(28234);class V extends $.wS{constructor(n,s,o,v,E){super(n,s,o,v,E,!0)}}class Z extends $.ul{constructor(n,s,o,v=!1){super(n,s,v),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=o,this.configureRules()}configureRules(){this.rules.push(new $.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new V("name","The location name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class X extends N{constructor(n){super("CreateLocationAction"),this.input=n}preValidateAction(){this.validationContext.addRule(new Z("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateLocation({input:this.input}).pipe((0,C.w)(n=>(0,H.of)(n.data.created)))}}class k extends N{constructor(n){super("UpdateLocationsAction"),this.locations=n}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.locations,!0))}performAction(){this.response=this.businessProvider.data.userUpdateLocations({input:{locations:this.locations}}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}class Y extends N{constructor(n,s){super("UpdateLocationAction"),this.location=n,this.locationId=s}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.location,!0)).addRule(new $.xF("Id","Id should be a CUID and not null",this.locationId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateLocation({locationId:this.locationId,input:this.location}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}let J=(()=>{class c extends x.nH{constructor(s,o,v){super("NotificationService.LocationBusinessProviderService",s,v),this.data=o}createLocation(s){const o=new X(s);return o.Do(this),o.response}updateLocation(s,o){const v=new Y(s,o);return v.Do(this),v.response}importLocations(s){const o=new k(s);return o.Do(this),o.response}validateLocationExcelData(s,o){const v=new D(s,o);return v.Do(this),v.response}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(M.ed),b.LFG(B.q),b.LFG(x.oI))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),q=(()=>{class c extends x.nH{constructor(s,o,v){super("LocationService",v,s),this.businessProvider=o}createLocation(s){const o=Object.fromEntries(Object.entries(s).filter(([v,E])=>null!==E));return this.businessProvider.createLocation(o)}updateLocation(s,o){return this.businessProvider.updateLocation(s,o)}importLocations(s){return this.businessProvider.importLocations(s)}validateLocationExcelData(s,o){return this.businessProvider.validateLocationExcelData(s,o)}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(J,8),b.LFG(J),b.LFG(M.ed))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),I=(()=>{class c extends L.m1{constructor(s,o,v,E,A,y){if(super({loading:!1,locations:[],done:!1,searchQuery:"",formName:void 0,placeOfServiceId:void 0,vendorLocationId:void 0,clinicalProviderId:void 0,vendorId:void 0,paging:{limit:1e4,skip:0}}),this.data=s,this.router=o,this.route=v,this.toast=E,this.formService=A,this.locationService=y,this.errors$=this.select(t=>t.errors),this.loading$=this.select(t=>t.loading),this.done$=this.select(t=>t.done),this.item$=this.select(t=>t.item),this.locations$=this.select(t=>t.locations),this.placeOfServices$=this.select(t=>t.placeOfServices||[]),this.vendorLocationId$=this.select(t=>t.vendorLocationId),this.vendorId$=this.select(t=>t.vendorId),this.clinicalProviderId$=this.select(t=>t.clinicalProviderId),this.placeOfServiceId$=this.select(t=>t.placeOfServiceId),this.paging$=this.select(t=>t.paging),this.searchQuery$=this.select(t=>t.searchQuery),this.formName$=this.select(t=>t.formName),this.actionResult$=this.select(this.item$,this.done$,(t,h)=>({item:t,done:h}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.locations$,this.placeOfServices$,(t,h,m,g,d,p)=>({errors:t,loading:h,item:m,formName:g,locations:d,placeOfServices:p}),{debounce:!0}),this.input$=this.select(this.paging$,this.placeOfServiceId$,this.searchQuery$,this.vendorLocationId$,this.vendorId$,this.clinicalProviderId$,(t,h,m,g,d,p)=>({limit:t.limit,skip:t.skip,name:m,placeOfServiceId:h,vendorLocationId:g,clinicalProviderId:p,vendorId:d,total:t.total})),this.setFormName=this.updater((t,h)=>Object.assign(Object.assign({},t),{formName:h})),this.setPlaceOfServiceId=this.updater((t,h)=>Object.assign(Object.assign({},t),{placeOfServiceId:h})),this.setVendorLocationId=this.updater((t,h)=>Object.assign(Object.assign({},t),{vendorLocationId:h})),this.setVendorId=this.updater((t,h)=>Object.assign(Object.assign({},t),{vendorId:h})),this.setClinicalProviderId=this.updater((t,h)=>Object.assign(Object.assign({},t),{clinicalProviderId:h})),this.filterPlaceOfServices=t=>this.data.userSelectPlaceOfServices({input:{name:t}}).pipe((0,L._b)(h=>{let m=h.data.items;return this.patchState({placeOfServices:m}),m},h=>this.patchState({errors:h.graphQLErrors?h.graphQLErrors:h})),(0,R.U)(h=>h.data.items)),this.addPlaceOfService=this.updater((t,h)=>Object.assign(Object.assign({},t),{placeOfServices:t.placeOfServices.concat(h)})),this.setItem=this.updater((t,h)=>Object.assign(Object.assign({},t),{item:h})),this.addNewLocation=this.updater((t,h)=>Object.assign(Object.assign({},t),{locations:[...t.locations,h]})),this.updateLocation=this.updater((t,h)=>Object.assign(Object.assign({},t),{locations:t.locations.map(m=>m.id===h.id?h:m)})),this.addLocations=this.updater((t,h)=>Object.assign(Object.assign({},t),{locations:t.locations.concat(h)})),this.updateLocations=this.updater((t,h)=>Object.assign(Object.assign({},t),{locations:t.locations.map(m=>h.find(d=>d.id===m.id)||m)})),this.setSearchQuery=this.updater((t,h)=>Object.assign(Object.assign({},t),{searchQuery:h})),this.loadLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(h=>this.data.userLocation({locationId:h}).pipe((0,L._b)(m=>{console.log("location",m.data.item),this.patchState({item:m.data.item,errors:m.errors,loading:!1})},m=>this.patchState({loading:!1,errors:m.graphQLErrors?m.graphQLErrors:m})))))),this.loadLocationsEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.input$),(0,C.w)(([h,m])=>this.data.userLocations({input:m}).pipe((0,L._b)(g=>this.patchState({paging:{limit:m.limit,skip:m.skip,total:g.data.count.total},locations:g.data.items,errors:g.errors,loading:!1}),g=>this.patchState({loading:!1,errors:g.graphQLErrors?g.graphQLErrors:g})))))),this.createLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(h=>this.locationService.createLocation(Object.assign({},h)).pipe((0,L._b)(m=>{this.addNewLocation(m),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:m,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},m=>{m.graphQLErrors?(this.toast.error(m.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:m.graphQLErrors?m.graphQLErrors:m})):(this.toast.error(m.Message),this.formService.setErrors(m.Data))}))))),this.updateLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([h,m])=>this.locationService.updateLocation(h,h.id).pipe((0,L._b)(g=>{this.updateLocation(g),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:g,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},g=>{g.graphQLErrors?(this.toast.error(g.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:g.graphQLErrors?g.graphQLErrors:g})):(this.toast.error(g.Message),this.formService.setErrors(g.Data))}))))),this.deleteLocationEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([h,m])=>this.data.userDeleteLocation({locationId:m.id}).pipe((0,L._b)(g=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:g.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},g=>{g.graphQLErrors?(this.toast.error(g.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:g.graphQLErrors?g.graphQLErrors:g})):(this.toast.error(g.Message),this.formService.setErrors(g.Data))}))))),this.importExcelEffect=this.effect(t=>t.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(h=>this.locationService.importLocations(h).pipe((0,O.K)(m=>{var g;return this.toast.error(null!==(g=m.Message)&&void 0!==g?g:"Failed to save",{duration:3e3}),U.E}),(0,P.b)(m=>{const g=JSON.parse(m.created),d=JSON.parse(m.updated),p=JSON.parse(m.failed),f=g.length+d.length+p.length;this.addLocations(g),this.updateLocations(d),this.toast.success(`${g.length} created, ${d.length} updated, ${p.length} failed of total ${f}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("locationId")?(this.route.snapshot.paramMap.get("locationId"),this.setFormName("location_edit")):this.setFormName("location_create"),this.route.snapshot.paramMap.has("placeOfServiceId")){var l=this.route.snapshot.paramMap.get("placeOfServiceId");this.setPlaceOfServiceId(l)}if(this.route.snapshot.paramMap.has("vendorLocationId")){var e=this.route.snapshot.paramMap.get("vendorLocationId");this.setVendorLocationId(e)}if(this.route.snapshot.paramMap.has("vendorId")){var i=this.route.snapshot.paramMap.get("vendorId");this.setVendorId(i)}if(this.route.snapshot.paramMap.has("clinicalProviderId")){var r=this.route.snapshot.paramMap.get("clinicalProviderId");this.setClinicalProviderId(r)}}validateImportData(s){return this.vm$.pipe((0,C.w)(o=>this.locationService.validateLocationExcelData(s,o.placeOfServices)))}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(B.q),b.LFG(j.F0),b.LFG(j.gz),b.LFG(G.F),b.LFG(z.o),b.LFG(q))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac}),c})()},51194:(at,K,u)=>{u.d(K,{d:()=>I});var L=u(24280),U=u(60515),R=u(54004),P=u(18505),C=u(63900),w=u(11365),O=u(70262),b=u(94650),B=u(73602),j=u(30144),G=u(71873),z=u(4523),M=u(56869),x=u(71767),F=u(39646);class N extends x.T_{constructor(n){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=n}Do(n){return this.businessProvider=n,this.serviceContext=n.serviceContext,this.loggingService=n.loggingService,this.execute(),this.response}}var $=u(26177);class D extends N{constructor(n,s,o,v){super("ValidatePatientExcelDataAction"),this.valid=!1,this.excelData=n,this.ethnicities=s,this.genders=o,this.languages=v}preValidateAction(){const n=[];this.excelData.map((s,o)=>{n.push(s.name),this.validationContext.addRule(new $.mi(`ethnicityName_${o}_is_valid}`,"Ethnicity Is Not Valid","ethnicity.name",s.ethnicity,this.ethnicities,!0)),this.validationContext.addRule(new $.mi(`genderName_${o}_is_valid}`,"Gender Is Not Valid","gender.name",s.gender,this.genders,!0)),this.validationContext.addRule(new $.mi(`languageName_${o}_is_valid}`,"Language Is Not Valid","language.name",s.language,this.languages,!0))}),this.validationContext.addRule(new $.cL("nameIsUnique","Name should be unique",n,!0))}performAction(){}finish(){super.finish();const n={};let s=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(o=>{o instanceof $.mi?o.isValid||(n[o.columnName]?n[o.columnName].newNames.includes(o.newName)||n[o.columnName].newNames.push(o.newName):n[o.columnName]={options:o.possibleValueList.map(v=>v.name),newNames:[o.newName]}):o instanceof $.cL&&(o.isValid||(s=o.conflicts))})):this.valid=!0,this.response=(0,F.of)({valid:this.valid,excelData:this.excelData,conflictNames:s,unknownNames:n})}}var H=u(28234);class V extends $.wS{constructor(n,s,o,v,E){super(n,s,o,v,E,!0)}}class Z extends $.ul{constructor(n,s,o,v=!1){super(n,s,v),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=o,this.configureRules()}configureRules(){this.rules.push(new $.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new V("name","The patient name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class X extends N{constructor(n){super("CreatePatientAction"),this.input=n}preValidateAction(){this.validationContext.addRule(new Z("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreatePatient({input:this.input}).pipe((0,C.w)(n=>(0,H.of)(n.data.created)))}}class k extends N{constructor(n){super("UpdatePatientsAction"),this.patients=n}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.patients,!0))}performAction(){this.response=this.businessProvider.data.userUpdatePatients({input:{patients:this.patients}}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}class Y extends N{constructor(n,s){super("UpdatePatientAction"),this.patient=n,this.patientId=s}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.patient,!0)).addRule(new $.xF("Id","Id should be a CUID and not null",this.patientId,!0))}performAction(){this.response=this.businessProvider.data.userUpdatePatient({patientId:this.patientId,input:this.patient}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}let J=(()=>{class c extends x.nH{constructor(s,o,v){super("NotificationService.PatientBusinessProviderService",s,v),this.data=o}createPatient(s){const o=new X(s);return o.Do(this),o.response}updatePatient(s,o){const v=new Y(s,o);return v.Do(this),v.response}importPatients(s){const o=new k(s);return o.Do(this),o.response}validatePatientExcelData(s,o,v,E){const A=new D(s,o,v,E);return A.Do(this),A.response}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(M.ed),b.LFG(B.q),b.LFG(x.oI))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),q=(()=>{class c extends x.nH{constructor(s,o,v){super("PatientService",v,s),this.businessProvider=o}createPatient(s){var o,v,E,A;s.notes=(null===(o=s.notes)||void 0===o?void 0:o.length)>1e3?null===(v=s.notes)||void 0===v?void 0:v.substring(0,999):s.notes,s.debtorRemarks=(null===(E=s.debtorRemarks)||void 0===E?void 0:E.length)>1e3?null===(A=s.debtorRemarks)||void 0===A?void 0:A.substring(0,999):s.debtorRemarks;const y=Object.fromEntries(Object.entries(s).filter(([a,l])=>null!==l));return this.businessProvider.createPatient(y)}updatePatient(s,o){var v,E,A,y;return s.notes=(null===(v=s.notes)||void 0===v?void 0:v.length)>1e3?null===(E=s.notes)||void 0===E?void 0:E.substring(0,999):s.notes,s.debtorRemarks=(null===(A=s.debtorRemarks)||void 0===A?void 0:A.length)>1e3?null===(y=s.debtorRemarks)||void 0===y?void 0:y.substring(0,999):s.debtorRemarks,this.businessProvider.updatePatient(s,o)}importPatients(s){return this.businessProvider.importPatients(s)}validatePatientExcelData(s,o,v,E){return this.businessProvider.validatePatientExcelData(s,o,v,E)}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(J,8),b.LFG(J),b.LFG(M.ed))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),I=(()=>{class c extends L.m1{constructor(s,o,v,E,A,y){if(super({loading:!1,patients:[],done:!1,searchQuery:"",memberRegistrationNumber:void 0,formName:void 0,ethnicityId:void 0,genderId:void 0,languageId:void 0,clinicalProviderId:void 0,locationId:void 0,vendorLocationId:void 0,isAllPatients:!1,fromDate:void 0,toDate:void 0,paging:{limit:1e4,skip:0},mrn:void 0}),this.data=s,this.router=o,this.route=v,this.toast=E,this.formService=A,this.patientService=y,this.errors$=this.select(r=>r.errors),this.loading$=this.select(r=>r.loading),this.isAllPatients$=this.select(r=>r.isAllPatients),this.done$=this.select(r=>r.done),this.item$=this.select(r=>r.item),this.patients$=this.select(r=>r.patients),this.ethnicities$=this.select(r=>r.ethnicities||[]),this.genders$=this.select(r=>r.genders||[]),this.languages$=this.select(r=>r.languages||[]),this.clinicalProviderId$=this.select(r=>r.clinicalProviderId),this.locationId$=this.select(r=>r.locationId),this.ethnicityId$=this.select(r=>r.ethnicityId),this.genderId$=this.select(r=>r.genderId),this.languageId$=this.select(r=>r.languageId),this.paging$=this.select(r=>r.paging),this.searchQuery$=this.select(r=>r.searchQuery),this.memberRegistrationNumber$=this.select(r=>r.memberRegistrationNumber),this.fromDate$=this.select(r=>r.fromDate),this.toDate$=this.select(r=>r.toDate),this.vendorLocationId$=this.select(r=>r.vendorLocationId),this.formName$=this.select(r=>r.formName),this.mrn$=this.select(r=>r.mrn),this.actionResult$=this.select(this.item$,this.done$,(r,t)=>({item:r,done:t}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.patients$,this.ethnicities$,this.genders$,this.languages$,(r,t,h,m,g,d,p,f)=>({errors:r,loading:t,item:h,formName:m,patients:g,ethnicities:d,genders:p,languages:f}),{debounce:!0}),this.input$=this.select(this.paging$,this.ethnicityId$,this.genderId$,this.clinicalProviderId$,this.locationId$,this.vendorLocationId$,this.languageId$,this.searchQuery$,this.memberRegistrationNumber$,this.fromDate$,this.toDate$,this.isAllPatients$,this.mrn$,(r,t,h,m,g,d,p,f,S,Q,W,tt,et)=>({limit:r.limit,skip:r.skip,name:f,ethnicityId:t,genderId:h,languageId:p,total:r.total,clinicalProviderId:m,locationId:g,vendorLocationId:d,memberRegistrationNumber:S,fromDate:Q,toDate:W,medicalRecordNumber:et,isAllPatients:tt})),this.setFormName=this.updater((r,t)=>Object.assign(Object.assign({},r),{formName:t})),this.setEthnicityId=this.updater((r,t)=>Object.assign(Object.assign({},r),{ethnicityId:t})),this.setIsAllPatients=this.updater((r,t)=>Object.assign(Object.assign({},r),{isAllPatients:t})),this.setmedicalRecordNumber=this.updater((r,t)=>Object.assign(Object.assign({},r),{mrn:t})),this.setGenderId=this.updater((r,t)=>Object.assign(Object.assign({},r),{genderId:t})),this.setClinicalProviderId=this.updater((r,t)=>Object.assign(Object.assign({},r),{clinicalProviderId:t})),this.setLocationId=this.updater((r,t)=>Object.assign(Object.assign({},r),{locationId:t})),this.setVendorLocationId=this.updater((r,t)=>Object.assign(Object.assign({},r),{vendorLocationId:t})),this.setLanguageId=this.updater((r,t)=>Object.assign(Object.assign({},r),{languageId:t})),this.setLimit=this.updater((r,t)=>Object.assign(Object.assign({},r),{paging:Object.assign(Object.assign({},r.paging),{limit:t})})),this.setSkip=this.updater((r,t)=>Object.assign(Object.assign({},r),{paging:Object.assign(Object.assign({},r.paging),{skip:t})})),this.filterEthnicities=r=>this.data.userSelectEthnicities({input:{name:r}}).pipe((0,L._b)(t=>{let h=t.data.items;return this.patchState({ethnicities:h}),h},t=>this.patchState({errors:t.graphQLErrors?t.graphQLErrors:t})),(0,R.U)(t=>t.data.items)),this.filterGenders=r=>this.data.userSelectGenders({input:{name:r}}).pipe((0,L._b)(t=>{let h=t.data.items;return this.patchState({genders:h}),h},t=>this.patchState({errors:t.graphQLErrors?t.graphQLErrors:t})),(0,R.U)(t=>t.data.items)),this.filterLanguages=r=>this.data.userSelectLanguages({input:{name:r}}).pipe((0,L._b)(t=>{let h=t.data.items;return this.patchState({languages:h}),h},t=>this.patchState({errors:t.graphQLErrors?t.graphQLErrors:t})),(0,R.U)(t=>t.data.items)),this.addEthnicity=this.updater((r,t)=>Object.assign(Object.assign({},r),{ethnicities:r.ethnicities.concat(t)})),this.addGender=this.updater((r,t)=>Object.assign(Object.assign({},r),{genders:r.genders.concat(t)})),this.addLanguage=this.updater((r,t)=>Object.assign(Object.assign({},r),{languages:r.languages.concat(t)})),this.setItem=this.updater((r,t)=>Object.assign(Object.assign({},r),{item:t})),this.addNewPatient=this.updater((r,t)=>Object.assign(Object.assign({},r),{patients:[...r.patients,t]})),this.updatePatient=this.updater((r,t)=>Object.assign(Object.assign({},r),{patients:r.patients.map(h=>h.id===t.id?t:h)})),this.addPatients=this.updater((r,t)=>Object.assign(Object.assign({},r),{patients:r.patients.concat(t)})),this.updatePatients=this.updater((r,t)=>Object.assign(Object.assign({},r),{patients:r.patients.map(h=>t.find(g=>g.id===h.id)||h)})),this.setSearchQuery=this.updater((r,t)=>Object.assign(Object.assign({},r),{searchQuery:t})),this.setMemberRegistrationNumber=this.updater((r,t)=>Object.assign(Object.assign({},r),{memberRegistrationNumber:t})),this.setFromDate=this.updater((r,t)=>Object.assign(Object.assign({},r),{fromDate:t})),this.setToDate=this.updater((r,t)=>Object.assign(Object.assign({},r),{toDate:t})),this.loadPatientEffect=this.effect(r=>r.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(t=>this.data.userPatient({patientId:t}).pipe((0,L._b)(h=>{this.patchState({item:h.data.item,errors:h.errors,loading:!1})},h=>this.patchState({loading:!1,errors:h.graphQLErrors?h.graphQLErrors:h})))))),this.loadPatientsEffect=this.effect(r=>r.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.input$),(0,C.w)(([t,h])=>this.data.userPatients({input:h}).pipe((0,L._b)(m=>(console.log("Skip:::::",m),this.patchState({paging:{limit:h.limit,skip:h.skip,total:m.data.count.total},patients:m.data.items,errors:m.errors,loading:!1})),m=>this.patchState({loading:!1,errors:m.graphQLErrors?m.graphQLErrors:m})))))),this.createPatientEffect=this.effect(r=>r.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(t=>this.patientService.createPatient(Object.assign({},t)).pipe((0,L._b)(h=>{this.addNewPatient(h),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:h,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},h=>{h.graphQLErrors?(this.toast.error(h.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:h.graphQLErrors?h.graphQLErrors:h})):(this.toast.error(h.Message),this.formService.setErrors(h.Data))}))))),this.updatePatientEffect=this.effect(r=>r.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([t,h])=>this.patientService.updatePatient(t,t.id).pipe((0,L._b)(m=>{this.updatePatient(m),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:m,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},m=>{m.graphQLErrors?(this.toast.error(m.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:m.graphQLErrors?m.graphQLErrors:m})):(this.toast.error(m.Message),this.formService.setErrors(m.Data))}))))),this.deletePatientEffect=this.effect(r=>r.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([t,h])=>this.data.userDeletePatient({patientId:h.id}).pipe((0,L._b)(m=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:m.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},m=>{m.graphQLErrors?(this.toast.error(m.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:m.graphQLErrors?m.graphQLErrors:m})):(this.toast.error(m.Message),this.formService.setErrors(m.Data))}))))),this.importExcelEffect=this.effect(r=>r.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(t=>this.patientService.importPatients(t).pipe((0,O.K)(h=>{var m;return this.toast.error(null!==(m=h.Message)&&void 0!==m?m:"Failed to save",{duration:3e3}),U.E}),(0,P.b)(h=>{const m=JSON.parse(h.created),g=JSON.parse(h.updated),d=JSON.parse(h.failed),p=m.length+g.length+d.length;this.addPatients(m),this.updatePatients(g),this.toast.success(`${m.length} created, ${g.length} updated, ${d.length} failed of total ${p}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("patientId")?(this.route.snapshot.paramMap.get("patientId"),this.setFormName("patient_edit")):this.setFormName("patient_create"),this.route.snapshot.paramMap.has("ethnicityId")){var l=this.route.snapshot.paramMap.get("ethnicityId");this.setEthnicityId(l)}if(this.route.snapshot.paramMap.has("genderId")){var e=this.route.snapshot.paramMap.get("genderId");this.setGenderId(e)}if(this.route.snapshot.paramMap.has("languageId")){var i=this.route.snapshot.paramMap.get("languageId");this.setLanguageId(i)}}validateImportData(s){return this.vm$.pipe((0,C.w)(o=>this.patientService.validatePatientExcelData(s,o.ethnicities,o.genders,o.languages)))}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(B.q),b.LFG(j.F0),b.LFG(j.gz),b.LFG(G.F),b.LFG(z.o),b.LFG(q))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac}),c})()},62336:(at,K,u)=>{u.d(K,{J:()=>I});var L=u(24280),U=u(60515),R=u(54004),P=u(18505),C=u(63900),w=u(11365),O=u(70262),b=u(94650),B=u(73602),j=u(30144),G=u(71873),z=u(4523),M=u(56869),x=u(71767),F=u(39646);class N extends x.T_{constructor(n){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=n}Do(n){return this.businessProvider=n,this.serviceContext=n.serviceContext,this.loggingService=n.loggingService,this.execute(),this.response}}var $=u(26177);class D extends N{constructor(n,s){super("ValidateReviewExcelDataAction"),this.valid=!1,this.excelData=n,this.clinicalProviders=s}preValidateAction(){const n=[];this.excelData.map((s,o)=>{n.push(s.name),this.validationContext.addRule(new $.mi(`clinicalProviderName_${o}_is_valid}`,"Clinical Provider Is Not Valid","clinicalProvider.name",s.clinicalProvider,this.clinicalProviders,!0))}),this.validationContext.addRule(new $.cL("nameIsUnique","Name should be unique",n,!0))}performAction(){}finish(){super.finish();const n={};let s=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(o=>{o instanceof $.mi?o.isValid||(n[o.columnName]?n[o.columnName].newNames.includes(o.newName)||n[o.columnName].newNames.push(o.newName):n[o.columnName]={options:o.possibleValueList.map(v=>v.name),newNames:[o.newName]}):o instanceof $.cL&&(o.isValid||(s=o.conflicts))})):this.valid=!0,this.response=(0,F.of)({valid:this.valid,excelData:this.excelData,conflictNames:s,unknownNames:n})}}var H=u(28234);class V extends $.wS{constructor(n,s,o,v,E){super(n,s,o,v,E,!0)}}class Z extends $.ul{constructor(n,s,o,v=!1){super(n,s,v),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=o,this.configureRules()}configureRules(){this.rules.push(new $.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new V("name","The review name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class X extends N{constructor(n){super("CreateReviewAction"),this.input=n}preValidateAction(){this.validationContext.addRule(new Z("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateReview({input:this.input}).pipe((0,C.w)(n=>(0,H.of)(n.data.created)))}}class k extends N{constructor(n){super("UpdateReviewsAction"),this.reviews=n}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.reviews,!0))}performAction(){this.response=this.businessProvider.data.userUpdateReviews({input:{reviews:this.reviews}}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}class Y extends N{constructor(n,s){super("UpdateReviewAction"),this.review=n,this.reviewId=s}preValidateAction(){this.validationContext.addRule(new $.DJ("Input","Input should have values",this.review,!0)).addRule(new $.xF("Id","Id should be a CUID and not null",this.reviewId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateReview({reviewId:this.reviewId,input:this.review}).pipe((0,C.w)(n=>(0,F.of)(n.data.updated)))}}let J=(()=>{class c extends x.nH{constructor(s,o,v){super("NotificationService.ReviewBusinessProviderService",s,v),this.data=o}createReview(s){const o=new X(s);return o.Do(this),o.response}updateReview(s,o){const v=new Y(s,o);return v.Do(this),v.response}importReviews(s){const o=new k(s);return o.Do(this),o.response}validateReviewExcelData(s,o){const v=new D(s,o);return v.Do(this),v.response}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(M.ed),b.LFG(B.q),b.LFG(x.oI))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),q=(()=>{class c extends x.nH{constructor(s,o,v){super("ReviewService",v,s),this.businessProvider=o}createReview(s){const o=Object.fromEntries(Object.entries(s).filter(([v,E])=>null!==E));return this.businessProvider.createReview(o)}updateReview(s,o){return this.businessProvider.updateReview(s,o)}importReviews(s){return this.businessProvider.importReviews(s)}validateReviewExcelData(s,o){return this.businessProvider.validateReviewExcelData(s,o)}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(J,8),b.LFG(J),b.LFG(M.ed))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})(),I=(()=>{class c extends L.m1{constructor(s,o,v,E,A,y){if(super({loading:!1,reviews:[],done:!1,searchQuery:"",formName:void 0,clinicalProviderId:void 0,paging:{limit:1e4,skip:0}}),this.data=s,this.router=o,this.route=v,this.toast=E,this.formService=A,this.reviewService=y,this.errors$=this.select(e=>e.errors),this.loading$=this.select(e=>e.loading),this.done$=this.select(e=>e.done),this.item$=this.select(e=>e.item),this.reviews$=this.select(e=>e.reviews),this.clinicalProviders$=this.select(e=>e.clinicalProviders||[]),this.clinicalProviderId$=this.select(e=>e.clinicalProviderId),this.paging$=this.select(e=>e.paging),this.searchQuery$=this.select(e=>e.searchQuery),this.formName$=this.select(e=>e.formName),this.actionResult$=this.select(this.item$,this.done$,(e,i)=>({item:e,done:i}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.reviews$,this.clinicalProviders$,(e,i,r,t,h,m)=>({errors:e,loading:i,item:r,formName:t,reviews:h,clinicalProviders:m}),{debounce:!0}),this.input$=this.select(this.paging$,this.clinicalProviderId$,this.searchQuery$,(e,i,r)=>({limit:e.limit,skip:e.skip,name:r,clinicalProviderId:i,total:e.total})),this.setFormName=this.updater((e,i)=>Object.assign(Object.assign({},e),{formName:i})),this.setClinicalProviderId=this.updater((e,i)=>Object.assign(Object.assign({},e),{clinicalProviderId:i})),this.filterClinicalProviders=e=>this.data.userSelectClinicalProviders({input:{name:e}}).pipe((0,L._b)(i=>{let r=i.data.items;return this.patchState({clinicalProviders:r}),r},i=>this.patchState({errors:i.graphQLErrors?i.graphQLErrors:i})),(0,R.U)(i=>i.data.items)),this.addClinicalProvider=this.updater((e,i)=>Object.assign(Object.assign({},e),{clinicalProviders:e.clinicalProviders.concat(i)})),this.setItem=this.updater((e,i)=>Object.assign(Object.assign({},e),{item:i})),this.addNewReview=this.updater((e,i)=>{if(i.parentId){let r={};return e.reviews.forEach(t=>{t.id==i.parentId&&(t.childrenReviews.push(t),r=t)}),Object.assign(Object.assign({},e),{reviews:[...e.reviews,r]})}return Object.assign(Object.assign({},e),{reviews:[...e.reviews,i]})}),this.updateReview=this.updater((e,i)=>Object.assign(Object.assign({},e),{reviews:e.reviews.map(r=>r.id===i.id?i:r)})),this.addReviews=this.updater((e,i)=>Object.assign(Object.assign({},e),{reviews:e.reviews.concat(i)})),this.updateReviews=this.updater((e,i)=>Object.assign(Object.assign({},e),{reviews:e.reviews.map(r=>i.find(h=>h.id===r.id)||r)})),this.setSearchQuery=this.updater((e,i)=>Object.assign(Object.assign({},e),{searchQuery:i})),this.loadReviewEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(i=>this.data.userReview({reviewId:i}).pipe((0,L._b)(r=>{this.patchState({item:r.data.item,errors:r.errors,loading:!1})},r=>this.patchState({loading:!1,errors:r.graphQLErrors?r.graphQLErrors:r})))))),this.loadReviewsEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.input$),(0,C.w)(([i,r])=>this.data.userReviews({input:r}).pipe((0,L._b)(t=>(console.log("userReviews",t.data.items),this.patchState({paging:{limit:r.limit,skip:r.skip,total:t.data.count.total},reviews:t.data.items,errors:t.errors,loading:!1})),t=>this.patchState({loading:!1,errors:t.graphQLErrors?t.graphQLErrors:t})))))),this.createReviewEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(i=>this.reviewService.createReview(Object.assign({},i)).pipe((0,L._b)(r=>{this.addNewReview(r),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:r,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},r=>{r.graphQLErrors?(this.toast.error(r.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:r.graphQLErrors?r.graphQLErrors:r})):(this.toast.error(r.Message),this.formService.setErrors(r.Data))}))))),this.updateReviewEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([i,r])=>this.reviewService.updateReview(i,i.id).pipe((0,L._b)(t=>{this.updateReview(t),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:t,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},t=>{t.graphQLErrors?(this.toast.error(t.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:t.graphQLErrors?t.graphQLErrors:t})):(this.toast.error(t.Message),this.formService.setErrors(t.Data))}))))),this.deleteReviewEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,w.M)(this.item$),(0,C.w)(([i,r])=>this.data.userDeleteReview({reviewId:r.id}).pipe((0,L._b)(t=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:t.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},t=>{t.graphQLErrors?(this.toast.error(t.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:t.graphQLErrors?t.graphQLErrors:t})):(this.toast.error(t.Message),this.formService.setErrors(t.Data))}))))),this.importExcelEffect=this.effect(e=>e.pipe((0,P.b)(()=>this.patchState({loading:!0})),(0,C.w)(i=>this.reviewService.importReviews(i).pipe((0,O.K)(r=>{var t;return this.toast.error(null!==(t=r.Message)&&void 0!==t?t:"Failed to save",{duration:3e3}),U.E}),(0,P.b)(r=>{const t=JSON.parse(r.created),h=JSON.parse(r.updated),m=JSON.parse(r.failed),g=t.length+h.length+m.length;this.addReviews(t),this.updateReviews(h),this.toast.success(`${t.length} created, ${h.length} updated, ${m.length} failed of total ${g}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("reviewId")?(this.route.snapshot.paramMap.get("reviewId"),this.setFormName("review_edit")):this.setFormName("review_create"),this.route.snapshot.paramMap.has("clinicalProviderId")){var l=this.route.snapshot.paramMap.get("clinicalProviderId");this.setClinicalProviderId(l)}}validateImportData(s){return this.vm$.pipe((0,C.w)(o=>this.reviewService.validateReviewExcelData(s,o.clinicalProviders)))}}return c.\u0275fac=function(s){return new(s||c)(b.LFG(B.q),b.LFG(j.F0),b.LFG(j.gz),b.LFG(G.F),b.LFG(z.o),b.LFG(q))},c.\u0275prov=b.Yz7({token:c,factory:c.\u0275fac}),c})()},53783:(at,K,u)=>{u.d(K,{T:()=>q});var L=u(24280),U=u(60515),R=u(18505),P=u(63900),C=u(11365),w=u(70262),O=u(94650),b=u(73602),B=u(30144),j=u(71873),G=u(4523),z=u(56869),M=u(71767),x=u(39646);class F extends M.T_{constructor(c){super(),this.showRuleMessages=!0,this.hideRuleMessages=!1,this.actionName=c}Do(c){return this.businessProvider=c,this.serviceContext=c.serviceContext,this.loggingService=c.loggingService,this.execute(),this.response}}var N=u(26177);class $ extends F{constructor(c){super("ValidateSpecialtyExcelDataAction"),this.valid=!1,this.excelData=c}preValidateAction(){const c=[];this.excelData.map((n,s)=>{c.push(n.name)}),this.validationContext.addRule(new N.cL("nameIsUnique","Name should be unique",c,!0))}performAction(){}finish(){super.finish();const c={};let n=[];this.validationContext.hasRuleViolations()?(this.valid=!1,this.validationContext.rules.map(s=>{s instanceof N.mi?s.isValid||(c[s.columnName]?c[s.columnName].newNames.includes(s.newName)||c[s.columnName].newNames.push(s.newName):c[s.columnName]={options:s.possibleValueList.map(o=>o.name),newNames:[s.newName]}):s instanceof N.cL&&(s.isValid||(n=s.conflicts))})):this.valid=!0,this.response=(0,x.of)({valid:this.valid,excelData:this.excelData,conflictNames:n,unknownNames:c})}}var D=u(28234);class H extends N.wS{constructor(c,n,s,o,v){super(c,n,s,o,v,!0)}}class V extends N.ul{constructor(c,n,s,o=!1){super(c,n,o),this.displayToUser=!0,this.doNotDisplayToUser=!1,this.target=s,this.configureRules()}configureRules(){this.rules.push(new N.DJ("NotificationIsNotNull","The form message cannot be null or undefined.",this.target,this.doNotDisplayToUser)),this.rules.push(new H("name","The specialty name is not valid. Must be within 2 and 255 characters.",this.target.name,2,255))}}class Z extends F{constructor(c){super("CreateSpecialtyAction"),this.input=c}preValidateAction(){this.validationContext.addRule(new V("InputIsNotNull","The input information is not valid.",this.input,this.showRuleMessages))}performAction(){this.response=this.businessProvider.data.userCreateSpecialty({input:this.input}).pipe((0,P.w)(c=>(0,D.of)(c.data.created)))}}class X extends F{constructor(c){super("UpdateSpecialtiesAction"),this.specialties=c}preValidateAction(){this.validationContext.addRule(new N.DJ("Input","Input should have values",this.specialties,!0))}performAction(){this.response=this.businessProvider.data.userUpdateSpecialties({input:{specialties:this.specialties}}).pipe((0,P.w)(c=>(0,x.of)(c.data.updated)))}}class k extends F{constructor(c,n){super("UpdateSpecialtyAction"),this.specialty=c,this.specialtyId=n}preValidateAction(){this.validationContext.addRule(new N.DJ("Input","Input should have values",this.specialty,!0)).addRule(new N.xF("Id","Id should be a CUID and not null",this.specialtyId,!0))}performAction(){this.response=this.businessProvider.data.userUpdateSpecialty({specialtyId:this.specialtyId,input:this.specialty}).pipe((0,P.w)(c=>(0,x.of)(c.data.updated)))}}let Y=(()=>{class I extends M.nH{constructor(n,s,o){super("NotificationService.SpecialtyBusinessProviderService",n,o),this.data=s}createSpecialty(n){const s=new Z(n);return s.Do(this),s.response}updateSpecialty(n,s){const o=new k(n,s);return o.Do(this),o.response}importSpecialties(n){const s=new X(n);return s.Do(this),s.response}validateSpecialtyExcelData(n){const s=new $(n);return s.Do(this),s.response}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(z.ed),O.LFG(b.q),O.LFG(M.oI))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac,providedIn:"root"}),I})(),J=(()=>{class I extends M.nH{constructor(n,s,o){super("SpecialtyService",o,n),this.businessProvider=s}createSpecialty(n){const s=Object.fromEntries(Object.entries(n).filter(([o,v])=>null!==v));return this.businessProvider.createSpecialty(s)}updateSpecialty(n,s){return this.businessProvider.updateSpecialty(n,s)}importSpecialties(n){return this.businessProvider.importSpecialties(n)}validateSpecialtyExcelData(n){return this.businessProvider.validateSpecialtyExcelData(n)}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(Y,8),O.LFG(Y),O.LFG(z.ed))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac,providedIn:"root"}),I})(),q=(()=>{class I extends L.m1{constructor(n,s,o,v,E,A){super({loading:!1,specialties:[],done:!1,searchQuery:"",formName:void 0,paging:{limit:1e4,skip:0}}),this.data=n,this.router=s,this.route=o,this.toast=v,this.formService=E,this.specialtyService=A,this.errors$=this.select(a=>a.errors),this.loading$=this.select(a=>a.loading),this.done$=this.select(a=>a.done),this.item$=this.select(a=>a.item),this.specialties$=this.select(a=>a.specialties),this.paging$=this.select(a=>a.paging),this.searchQuery$=this.select(a=>a.searchQuery),this.formName$=this.select(a=>a.formName),this.actionResult$=this.select(this.item$,this.done$,(a,l)=>({item:a,done:l}),{debounce:!0}),this.vm$=this.select(this.errors$,this.loading$,this.item$,this.formName$,this.specialties$,(a,l,e,i,r)=>({errors:a,loading:l,item:e,formName:i,specialties:r}),{debounce:!0}),this.input$=this.select(this.paging$,this.searchQuery$,(a,l)=>({limit:a.limit,skip:a.skip,name:l,total:a.total})),this.setFormName=this.updater((a,l)=>Object.assign(Object.assign({},a),{formName:l})),this.setItem=this.updater((a,l)=>Object.assign(Object.assign({},a),{item:l})),this.addNewSpecialty=this.updater((a,l)=>Object.assign(Object.assign({},a),{specialties:[...a.specialties,l]})),this.updateSpecialty=this.updater((a,l)=>Object.assign(Object.assign({},a),{specialties:a.specialties.map(e=>e.id===l.id?l:e)})),this.addSpecialties=this.updater((a,l)=>Object.assign(Object.assign({},a),{specialties:a.specialties.concat(l)})),this.updateSpecialties=this.updater((a,l)=>Object.assign(Object.assign({},a),{specialties:a.specialties.map(e=>l.find(r=>r.id===e.id)||e)})),this.setSearchQuery=this.updater((a,l)=>Object.assign(Object.assign({},a),{searchQuery:l})),this.loadSpecialtyEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.data.userSpecialty({specialtyId:l}).pipe((0,L._b)(e=>{this.patchState({item:e.data.item,errors:e.errors,loading:!1})},e=>this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})))))),this.loadSpecialtiesEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.input$),(0,P.w)(([l,e])=>this.data.userSpecialties({input:e}).pipe((0,L._b)(i=>this.patchState({paging:{limit:e.limit,skip:e.skip,total:i.data.count.total},specialties:i.data.items,errors:i.errors,loading:!1}),i=>this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})))))),this.createSpecialtyEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.specialtyService.createSpecialty(Object.assign({},l)).pipe((0,L._b)(e=>{this.addNewSpecialty(e),this.toast.success("Created Successfully!"),setTimeout(()=>this.patchState({item:e,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},e=>{e.graphQLErrors?(this.toast.error(e.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:e.graphQLErrors?e.graphQLErrors:e})):(this.toast.error(e.Message),this.formService.setErrors(e.Data))}))))),this.updateSpecialtyEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.item$),(0,P.w)(([l,e])=>this.specialtyService.updateSpecialty(l,l.id).pipe((0,L._b)(i=>{this.updateSpecialty(i),this.toast.success("Updated Successfully!"),setTimeout(()=>this.patchState({item:i,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.deleteSpecialtyEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,C.M)(this.item$),(0,P.w)(([l,e])=>this.data.userDeleteSpecialty({specialtyId:e.id}).pipe((0,L._b)(i=>{this.toast.success("Deleted successfully!",{duration:3e3}),setTimeout(()=>this.patchState({item:i.data.deleted,loading:!1,done:!0}),300),setTimeout(()=>this.patchState({done:!1,item:null}),600)},i=>{i.graphQLErrors?(this.toast.error(i.graphQLErrors[0].message,{duration:3e3}),this.patchState({loading:!1,errors:i.graphQLErrors?i.graphQLErrors:i})):(this.toast.error(i.Message),this.formService.setErrors(i.Data))}))))),this.importExcelEffect=this.effect(a=>a.pipe((0,R.b)(()=>this.patchState({loading:!0})),(0,P.w)(l=>this.specialtyService.importSpecialties(l).pipe((0,w.K)(e=>{var i;return this.toast.error(null!==(i=e.Message)&&void 0!==i?i:"Failed to save",{duration:3e3}),U.E}),(0,R.b)(e=>{const i=JSON.parse(e.created),r=JSON.parse(e.updated),t=JSON.parse(e.failed),h=i.length+r.length+t.length;this.addSpecialties(i),this.updateSpecialties(r),this.toast.success(`${i.length} created, ${r.length} updated, ${t.length} failed of total ${h}`,{duration:3e3})}))))),this.route.snapshot.paramMap.has("specialtyId")?(this.route.snapshot.paramMap.get("specialtyId"),this.setFormName("specialty_edit")):this.setFormName("specialty_create")}validateImportData(n){return this.vm$.pipe((0,P.w)(s=>this.specialtyService.validateSpecialtyExcelData(n)))}}return I.\u0275fac=function(n){return new(n||I)(O.LFG(b.q),O.LFG(B.F0),O.LFG(B.gz),O.LFG(j.F),O.LFG(G.o),O.LFG(J))},I.\u0275prov=O.Yz7({token:I,factory:I.\u0275fac}),I})()}}]);